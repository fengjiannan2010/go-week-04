// Code generated by protoc-gen-go. DO NOT EDIT.
// source: odrive.proto

package odrive

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{0}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type Message struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *Message) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StopResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopResponse) Reset()         { *m = StopResponse{} }
func (m *StopResponse) String() string { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()    {}
func (*StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{2}
}

func (m *StopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResponse.Unmarshal(m, b)
}
func (m *StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResponse.Marshal(b, m, deterministic)
}
func (m *StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse.Merge(m, src)
}
func (m *StopResponse) XXX_Size() int {
	return xxx_messageInfo_StopResponse.Size(m)
}
func (m *StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse proto.InternalMessageInfo

func (m *StopResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type DiscInfoResponse struct {
	Message              *Message    `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	MediaInfo            *MediaInfo  `protobuf:"bytes,2,opt,name=mediaInfo,proto3" json:"mediaInfo,omitempty"`
	DiscFsInfo           *DiscFsInfo `protobuf:"bytes,3,opt,name=discFsInfo,proto3" json:"discFsInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DiscInfoResponse) Reset()         { *m = DiscInfoResponse{} }
func (m *DiscInfoResponse) String() string { return proto.CompactTextString(m) }
func (*DiscInfoResponse) ProtoMessage()    {}
func (*DiscInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{3}
}

func (m *DiscInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscInfoResponse.Unmarshal(m, b)
}
func (m *DiscInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscInfoResponse.Marshal(b, m, deterministic)
}
func (m *DiscInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscInfoResponse.Merge(m, src)
}
func (m *DiscInfoResponse) XXX_Size() int {
	return xxx_messageInfo_DiscInfoResponse.Size(m)
}
func (m *DiscInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiscInfoResponse proto.InternalMessageInfo

func (m *DiscInfoResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *DiscInfoResponse) GetMediaInfo() *MediaInfo {
	if m != nil {
		return m.MediaInfo
	}
	return nil
}

func (m *DiscInfoResponse) GetDiscFsInfo() *DiscFsInfo {
	if m != nil {
		return m.DiscFsInfo
	}
	return nil
}

type MediaInfo struct {
	Existed              int32    `protobuf:"varint,1,opt,name=existed,proto3" json:"existed,omitempty"`
	IsBlank              bool     `protobuf:"varint,2,opt,name=isBlank,proto3" json:"isBlank,omitempty"`
	IsCompleted          bool     `protobuf:"varint,3,opt,name=isCompleted,proto3" json:"isCompleted,omitempty"`
	SerialNo             string   `protobuf:"bytes,4,opt,name=serialNo,proto3" json:"serialNo,omitempty"`
	Mid                  string   `protobuf:"bytes,5,opt,name=mid,proto3" json:"mid,omitempty"`
	DiscType             int32    `protobuf:"varint,6,opt,name=discType,proto3" json:"discType,omitempty"`
	WriteSpeed           []int32  `protobuf:"varint,7,rep,packed,name=writeSpeed,proto3" json:"writeSpeed,omitempty"`
	TotalSize            int64    `protobuf:"varint,8,opt,name=totalSize,proto3" json:"totalSize,omitempty"`
	FreeSize             int64    `protobuf:"varint,9,opt,name=freeSize,proto3" json:"freeSize,omitempty"`
	UsedSize             int64    `protobuf:"varint,10,opt,name=usedSize,proto3" json:"usedSize,omitempty"`
	TrackNum             int32    `protobuf:"varint,11,opt,name=trackNum,proto3" json:"trackNum,omitempty"`
	TrackStatusList      []int32  `protobuf:"varint,12,rep,packed,name=trackStatusList,proto3" json:"trackStatusList,omitempty"`
	TrackSizeList        []int32  `protobuf:"varint,13,rep,packed,name=trackSizeList,proto3" json:"trackSizeList,omitempty"`
	TrackUsedSizeList    []int32  `protobuf:"varint,14,rep,packed,name=trackUsedSizeList,proto3" json:"trackUsedSizeList,omitempty"`
	TrackNwaList         []int32  `protobuf:"varint,15,rep,packed,name=trackNwaList,proto3" json:"trackNwaList,omitempty"`
	UserDefinedId        string   `protobuf:"bytes,16,opt,name=userDefinedId,proto3" json:"userDefinedId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MediaInfo) Reset()         { *m = MediaInfo{} }
func (m *MediaInfo) String() string { return proto.CompactTextString(m) }
func (*MediaInfo) ProtoMessage()    {}
func (*MediaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{4}
}

func (m *MediaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaInfo.Unmarshal(m, b)
}
func (m *MediaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaInfo.Marshal(b, m, deterministic)
}
func (m *MediaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaInfo.Merge(m, src)
}
func (m *MediaInfo) XXX_Size() int {
	return xxx_messageInfo_MediaInfo.Size(m)
}
func (m *MediaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MediaInfo proto.InternalMessageInfo

func (m *MediaInfo) GetExisted() int32 {
	if m != nil {
		return m.Existed
	}
	return 0
}

func (m *MediaInfo) GetIsBlank() bool {
	if m != nil {
		return m.IsBlank
	}
	return false
}

func (m *MediaInfo) GetIsCompleted() bool {
	if m != nil {
		return m.IsCompleted
	}
	return false
}

func (m *MediaInfo) GetSerialNo() string {
	if m != nil {
		return m.SerialNo
	}
	return ""
}

func (m *MediaInfo) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *MediaInfo) GetDiscType() int32 {
	if m != nil {
		return m.DiscType
	}
	return 0
}

func (m *MediaInfo) GetWriteSpeed() []int32 {
	if m != nil {
		return m.WriteSpeed
	}
	return nil
}

func (m *MediaInfo) GetTotalSize() int64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *MediaInfo) GetFreeSize() int64 {
	if m != nil {
		return m.FreeSize
	}
	return 0
}

func (m *MediaInfo) GetUsedSize() int64 {
	if m != nil {
		return m.UsedSize
	}
	return 0
}

func (m *MediaInfo) GetTrackNum() int32 {
	if m != nil {
		return m.TrackNum
	}
	return 0
}

func (m *MediaInfo) GetTrackStatusList() []int32 {
	if m != nil {
		return m.TrackStatusList
	}
	return nil
}

func (m *MediaInfo) GetTrackSizeList() []int32 {
	if m != nil {
		return m.TrackSizeList
	}
	return nil
}

func (m *MediaInfo) GetTrackUsedSizeList() []int32 {
	if m != nil {
		return m.TrackUsedSizeList
	}
	return nil
}

func (m *MediaInfo) GetTrackNwaList() []int32 {
	if m != nil {
		return m.TrackNwaList
	}
	return nil
}

func (m *MediaInfo) GetUserDefinedId() string {
	if m != nil {
		return m.UserDefinedId
	}
	return ""
}

type DiscFsInfo struct {
	DiscLabel            string   `protobuf:"bytes,1,opt,name=discLabel,proto3" json:"discLabel,omitempty"`
	DiscPasswd           string   `protobuf:"bytes,2,opt,name=discPasswd,proto3" json:"discPasswd,omitempty"`
	FsType               int32    `protobuf:"varint,3,opt,name=fsType,proto3" json:"fsType,omitempty"`
	MediaStatus          int32    `protobuf:"varint,4,opt,name=mediaStatus,proto3" json:"mediaStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscFsInfo) Reset()         { *m = DiscFsInfo{} }
func (m *DiscFsInfo) String() string { return proto.CompactTextString(m) }
func (*DiscFsInfo) ProtoMessage()    {}
func (*DiscFsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{5}
}

func (m *DiscFsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscFsInfo.Unmarshal(m, b)
}
func (m *DiscFsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscFsInfo.Marshal(b, m, deterministic)
}
func (m *DiscFsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscFsInfo.Merge(m, src)
}
func (m *DiscFsInfo) XXX_Size() int {
	return xxx_messageInfo_DiscFsInfo.Size(m)
}
func (m *DiscFsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscFsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DiscFsInfo proto.InternalMessageInfo

func (m *DiscFsInfo) GetDiscLabel() string {
	if m != nil {
		return m.DiscLabel
	}
	return ""
}

func (m *DiscFsInfo) GetDiscPasswd() string {
	if m != nil {
		return m.DiscPasswd
	}
	return ""
}

func (m *DiscFsInfo) GetFsType() int32 {
	if m != nil {
		return m.FsType
	}
	return 0
}

func (m *DiscFsInfo) GetMediaStatus() int32 {
	if m != nil {
		return m.MediaStatus
	}
	return 0
}

type CompleteDiscResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteDiscResponse) Reset()         { *m = CompleteDiscResponse{} }
func (m *CompleteDiscResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteDiscResponse) ProtoMessage()    {}
func (*CompleteDiscResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{6}
}

func (m *CompleteDiscResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteDiscResponse.Unmarshal(m, b)
}
func (m *CompleteDiscResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteDiscResponse.Marshal(b, m, deterministic)
}
func (m *CompleteDiscResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteDiscResponse.Merge(m, src)
}
func (m *CompleteDiscResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteDiscResponse.Size(m)
}
func (m *CompleteDiscResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteDiscResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteDiscResponse proto.InternalMessageInfo

func (m *CompleteDiscResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type FormatDiscResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FormatDiscResponse) Reset()         { *m = FormatDiscResponse{} }
func (m *FormatDiscResponse) String() string { return proto.CompactTextString(m) }
func (*FormatDiscResponse) ProtoMessage()    {}
func (*FormatDiscResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{7}
}

func (m *FormatDiscResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatDiscResponse.Unmarshal(m, b)
}
func (m *FormatDiscResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatDiscResponse.Marshal(b, m, deterministic)
}
func (m *FormatDiscResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatDiscResponse.Merge(m, src)
}
func (m *FormatDiscResponse) XXX_Size() int {
	return xxx_messageInfo_FormatDiscResponse.Size(m)
}
func (m *FormatDiscResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatDiscResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FormatDiscResponse proto.InternalMessageInfo

func (m *FormatDiscResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type SetSpeedConfRequest struct {
	DiscType             int32    `protobuf:"varint,1,opt,name=discType,proto3" json:"discType,omitempty"`
	Speed                int32    `protobuf:"varint,2,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetSpeedConfRequest) Reset()         { *m = SetSpeedConfRequest{} }
func (m *SetSpeedConfRequest) String() string { return proto.CompactTextString(m) }
func (*SetSpeedConfRequest) ProtoMessage()    {}
func (*SetSpeedConfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{8}
}

func (m *SetSpeedConfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSpeedConfRequest.Unmarshal(m, b)
}
func (m *SetSpeedConfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSpeedConfRequest.Marshal(b, m, deterministic)
}
func (m *SetSpeedConfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSpeedConfRequest.Merge(m, src)
}
func (m *SetSpeedConfRequest) XXX_Size() int {
	return xxx_messageInfo_SetSpeedConfRequest.Size(m)
}
func (m *SetSpeedConfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSpeedConfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetSpeedConfRequest proto.InternalMessageInfo

func (m *SetSpeedConfRequest) GetDiscType() int32 {
	if m != nil {
		return m.DiscType
	}
	return 0
}

func (m *SetSpeedConfRequest) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type SetSpeedConfResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetSpeedConfResponse) Reset()         { *m = SetSpeedConfResponse{} }
func (m *SetSpeedConfResponse) String() string { return proto.CompactTextString(m) }
func (*SetSpeedConfResponse) ProtoMessage()    {}
func (*SetSpeedConfResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{9}
}

func (m *SetSpeedConfResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSpeedConfResponse.Unmarshal(m, b)
}
func (m *SetSpeedConfResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSpeedConfResponse.Marshal(b, m, deterministic)
}
func (m *SetSpeedConfResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSpeedConfResponse.Merge(m, src)
}
func (m *SetSpeedConfResponse) XXX_Size() int {
	return xxx_messageInfo_SetSpeedConfResponse.Size(m)
}
func (m *SetSpeedConfResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSpeedConfResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetSpeedConfResponse proto.InternalMessageInfo

func (m *SetSpeedConfResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetSpeedConfRequest struct {
	DiscType             int32    `protobuf:"varint,1,opt,name=discType,proto3" json:"discType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpeedConfRequest) Reset()         { *m = GetSpeedConfRequest{} }
func (m *GetSpeedConfRequest) String() string { return proto.CompactTextString(m) }
func (*GetSpeedConfRequest) ProtoMessage()    {}
func (*GetSpeedConfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{10}
}

func (m *GetSpeedConfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpeedConfRequest.Unmarshal(m, b)
}
func (m *GetSpeedConfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpeedConfRequest.Marshal(b, m, deterministic)
}
func (m *GetSpeedConfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpeedConfRequest.Merge(m, src)
}
func (m *GetSpeedConfRequest) XXX_Size() int {
	return xxx_messageInfo_GetSpeedConfRequest.Size(m)
}
func (m *GetSpeedConfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpeedConfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpeedConfRequest proto.InternalMessageInfo

func (m *GetSpeedConfRequest) GetDiscType() int32 {
	if m != nil {
		return m.DiscType
	}
	return 0
}

type GetSpeedConfResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	DiscType             int32    `protobuf:"varint,2,opt,name=discType,proto3" json:"discType,omitempty"`
	Speed                int32    `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpeedConfResponse) Reset()         { *m = GetSpeedConfResponse{} }
func (m *GetSpeedConfResponse) String() string { return proto.CompactTextString(m) }
func (*GetSpeedConfResponse) ProtoMessage()    {}
func (*GetSpeedConfResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{11}
}

func (m *GetSpeedConfResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpeedConfResponse.Unmarshal(m, b)
}
func (m *GetSpeedConfResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpeedConfResponse.Marshal(b, m, deterministic)
}
func (m *GetSpeedConfResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpeedConfResponse.Merge(m, src)
}
func (m *GetSpeedConfResponse) XXX_Size() int {
	return xxx_messageInfo_GetSpeedConfResponse.Size(m)
}
func (m *GetSpeedConfResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpeedConfResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpeedConfResponse proto.InternalMessageInfo

func (m *GetSpeedConfResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetSpeedConfResponse) GetDiscType() int32 {
	if m != nil {
		return m.DiscType
	}
	return 0
}

func (m *GetSpeedConfResponse) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type SetBurnConfigRequest struct {
	DiscLabel            string   `protobuf:"bytes,1,opt,name=discLabel,proto3" json:"discLabel,omitempty"`
	DiscPasswd           string   `protobuf:"bytes,2,opt,name=discPasswd,proto3" json:"discPasswd,omitempty"`
	FsType               int32    `protobuf:"varint,3,opt,name=fsType,proto3" json:"fsType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetBurnConfigRequest) Reset()         { *m = SetBurnConfigRequest{} }
func (m *SetBurnConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetBurnConfigRequest) ProtoMessage()    {}
func (*SetBurnConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{12}
}

func (m *SetBurnConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBurnConfigRequest.Unmarshal(m, b)
}
func (m *SetBurnConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBurnConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetBurnConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBurnConfigRequest.Merge(m, src)
}
func (m *SetBurnConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetBurnConfigRequest.Size(m)
}
func (m *SetBurnConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBurnConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetBurnConfigRequest proto.InternalMessageInfo

func (m *SetBurnConfigRequest) GetDiscLabel() string {
	if m != nil {
		return m.DiscLabel
	}
	return ""
}

func (m *SetBurnConfigRequest) GetDiscPasswd() string {
	if m != nil {
		return m.DiscPasswd
	}
	return ""
}

func (m *SetBurnConfigRequest) GetFsType() int32 {
	if m != nil {
		return m.FsType
	}
	return 0
}

type SetBurnConfigResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetBurnConfigResponse) Reset()         { *m = SetBurnConfigResponse{} }
func (m *SetBurnConfigResponse) String() string { return proto.CompactTextString(m) }
func (*SetBurnConfigResponse) ProtoMessage()    {}
func (*SetBurnConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{13}
}

func (m *SetBurnConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBurnConfigResponse.Unmarshal(m, b)
}
func (m *SetBurnConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBurnConfigResponse.Marshal(b, m, deterministic)
}
func (m *SetBurnConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBurnConfigResponse.Merge(m, src)
}
func (m *SetBurnConfigResponse) XXX_Size() int {
	return xxx_messageInfo_SetBurnConfigResponse.Size(m)
}
func (m *SetBurnConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBurnConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetBurnConfigResponse proto.InternalMessageInfo

func (m *SetBurnConfigResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetBurnConfigResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	DiscLabel            string   `protobuf:"bytes,2,opt,name=discLabel,proto3" json:"discLabel,omitempty"`
	DiscPasswd           string   `protobuf:"bytes,3,opt,name=discPasswd,proto3" json:"discPasswd,omitempty"`
	FsType               int32    `protobuf:"varint,4,opt,name=fsType,proto3" json:"fsType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBurnConfigResponse) Reset()         { *m = GetBurnConfigResponse{} }
func (m *GetBurnConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetBurnConfigResponse) ProtoMessage()    {}
func (*GetBurnConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{14}
}

func (m *GetBurnConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBurnConfigResponse.Unmarshal(m, b)
}
func (m *GetBurnConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBurnConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetBurnConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBurnConfigResponse.Merge(m, src)
}
func (m *GetBurnConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetBurnConfigResponse.Size(m)
}
func (m *GetBurnConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBurnConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBurnConfigResponse proto.InternalMessageInfo

func (m *GetBurnConfigResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetBurnConfigResponse) GetDiscLabel() string {
	if m != nil {
		return m.DiscLabel
	}
	return ""
}

func (m *GetBurnConfigResponse) GetDiscPasswd() string {
	if m != nil {
		return m.DiscPasswd
	}
	return ""
}

func (m *GetBurnConfigResponse) GetFsType() int32 {
	if m != nil {
		return m.FsType
	}
	return 0
}

type SetBurnModeResquest struct {
	Mode                 int32    `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetBurnModeResquest) Reset()         { *m = SetBurnModeResquest{} }
func (m *SetBurnModeResquest) String() string { return proto.CompactTextString(m) }
func (*SetBurnModeResquest) ProtoMessage()    {}
func (*SetBurnModeResquest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{15}
}

func (m *SetBurnModeResquest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBurnModeResquest.Unmarshal(m, b)
}
func (m *SetBurnModeResquest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBurnModeResquest.Marshal(b, m, deterministic)
}
func (m *SetBurnModeResquest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBurnModeResquest.Merge(m, src)
}
func (m *SetBurnModeResquest) XXX_Size() int {
	return xxx_messageInfo_SetBurnModeResquest.Size(m)
}
func (m *SetBurnModeResquest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBurnModeResquest.DiscardUnknown(m)
}

var xxx_messageInfo_SetBurnModeResquest proto.InternalMessageInfo

func (m *SetBurnModeResquest) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type SetBurnModeResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetBurnModeResponse) Reset()         { *m = SetBurnModeResponse{} }
func (m *SetBurnModeResponse) String() string { return proto.CompactTextString(m) }
func (*SetBurnModeResponse) ProtoMessage()    {}
func (*SetBurnModeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{16}
}

func (m *SetBurnModeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetBurnModeResponse.Unmarshal(m, b)
}
func (m *SetBurnModeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetBurnModeResponse.Marshal(b, m, deterministic)
}
func (m *SetBurnModeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetBurnModeResponse.Merge(m, src)
}
func (m *SetBurnModeResponse) XXX_Size() int {
	return xxx_messageInfo_SetBurnModeResponse.Size(m)
}
func (m *SetBurnModeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetBurnModeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetBurnModeResponse proto.InternalMessageInfo

func (m *SetBurnModeResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetBurnModeResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Mode                 int32    `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBurnModeResponse) Reset()         { *m = GetBurnModeResponse{} }
func (m *GetBurnModeResponse) String() string { return proto.CompactTextString(m) }
func (*GetBurnModeResponse) ProtoMessage()    {}
func (*GetBurnModeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{17}
}

func (m *GetBurnModeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBurnModeResponse.Unmarshal(m, b)
}
func (m *GetBurnModeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBurnModeResponse.Marshal(b, m, deterministic)
}
func (m *GetBurnModeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBurnModeResponse.Merge(m, src)
}
func (m *GetBurnModeResponse) XXX_Size() int {
	return xxx_messageInfo_GetBurnModeResponse.Size(m)
}
func (m *GetBurnModeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBurnModeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBurnModeResponse proto.InternalMessageInfo

func (m *GetBurnModeResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetBurnModeResponse) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type InitDiscResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitDiscResponse) Reset()         { *m = InitDiscResponse{} }
func (m *InitDiscResponse) String() string { return proto.CompactTextString(m) }
func (*InitDiscResponse) ProtoMessage()    {}
func (*InitDiscResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{18}
}

func (m *InitDiscResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitDiscResponse.Unmarshal(m, b)
}
func (m *InitDiscResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitDiscResponse.Marshal(b, m, deterministic)
}
func (m *InitDiscResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitDiscResponse.Merge(m, src)
}
func (m *InitDiscResponse) XXX_Size() int {
	return xxx_messageInfo_InitDiscResponse.Size(m)
}
func (m *InitDiscResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitDiscResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitDiscResponse proto.InternalMessageInfo

func (m *InitDiscResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type LoadDiscRequest struct {
	ClearType            int32    `protobuf:"varint,1,opt,name=clearType,proto3" json:"clearType,omitempty"`
	LoadType             int32    `protobuf:"varint,2,opt,name=loadType,proto3" json:"loadType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadDiscRequest) Reset()         { *m = LoadDiscRequest{} }
func (m *LoadDiscRequest) String() string { return proto.CompactTextString(m) }
func (*LoadDiscRequest) ProtoMessage()    {}
func (*LoadDiscRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{19}
}

func (m *LoadDiscRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadDiscRequest.Unmarshal(m, b)
}
func (m *LoadDiscRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadDiscRequest.Marshal(b, m, deterministic)
}
func (m *LoadDiscRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadDiscRequest.Merge(m, src)
}
func (m *LoadDiscRequest) XXX_Size() int {
	return xxx_messageInfo_LoadDiscRequest.Size(m)
}
func (m *LoadDiscRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadDiscRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadDiscRequest proto.InternalMessageInfo

func (m *LoadDiscRequest) GetClearType() int32 {
	if m != nil {
		return m.ClearType
	}
	return 0
}

func (m *LoadDiscRequest) GetLoadType() int32 {
	if m != nil {
		return m.LoadType
	}
	return 0
}

type LoadDiscResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadDiscResponse) Reset()         { *m = LoadDiscResponse{} }
func (m *LoadDiscResponse) String() string { return proto.CompactTextString(m) }
func (*LoadDiscResponse) ProtoMessage()    {}
func (*LoadDiscResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{20}
}

func (m *LoadDiscResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadDiscResponse.Unmarshal(m, b)
}
func (m *LoadDiscResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadDiscResponse.Marshal(b, m, deterministic)
}
func (m *LoadDiscResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadDiscResponse.Merge(m, src)
}
func (m *LoadDiscResponse) XXX_Size() int {
	return xxx_messageInfo_LoadDiscResponse.Size(m)
}
func (m *LoadDiscResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadDiscResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoadDiscResponse proto.InternalMessageInfo

func (m *LoadDiscResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type UnLoadDiscResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnLoadDiscResponse) Reset()         { *m = UnLoadDiscResponse{} }
func (m *UnLoadDiscResponse) String() string { return proto.CompactTextString(m) }
func (*UnLoadDiscResponse) ProtoMessage()    {}
func (*UnLoadDiscResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{21}
}

func (m *UnLoadDiscResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnLoadDiscResponse.Unmarshal(m, b)
}
func (m *UnLoadDiscResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnLoadDiscResponse.Marshal(b, m, deterministic)
}
func (m *UnLoadDiscResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnLoadDiscResponse.Merge(m, src)
}
func (m *UnLoadDiscResponse) XXX_Size() int {
	return xxx_messageInfo_UnLoadDiscResponse.Size(m)
}
func (m *UnLoadDiscResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnLoadDiscResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnLoadDiscResponse proto.InternalMessageInfo

func (m *UnLoadDiscResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type UnLoadUdfDiscResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnLoadUdfDiscResponse) Reset()         { *m = UnLoadUdfDiscResponse{} }
func (m *UnLoadUdfDiscResponse) String() string { return proto.CompactTextString(m) }
func (*UnLoadUdfDiscResponse) ProtoMessage()    {}
func (*UnLoadUdfDiscResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{22}
}

func (m *UnLoadUdfDiscResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnLoadUdfDiscResponse.Unmarshal(m, b)
}
func (m *UnLoadUdfDiscResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnLoadUdfDiscResponse.Marshal(b, m, deterministic)
}
func (m *UnLoadUdfDiscResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnLoadUdfDiscResponse.Merge(m, src)
}
func (m *UnLoadUdfDiscResponse) XXX_Size() int {
	return xxx_messageInfo_UnLoadUdfDiscResponse.Size(m)
}
func (m *UnLoadUdfDiscResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnLoadUdfDiscResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnLoadUdfDiscResponse proto.InternalMessageInfo

func (m *UnLoadUdfDiscResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetDiscMountPointResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	MountPoint           string   `protobuf:"bytes,2,opt,name=mountPoint,proto3" json:"mountPoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiscMountPointResponse) Reset()         { *m = GetDiscMountPointResponse{} }
func (m *GetDiscMountPointResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiscMountPointResponse) ProtoMessage()    {}
func (*GetDiscMountPointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{23}
}

func (m *GetDiscMountPointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiscMountPointResponse.Unmarshal(m, b)
}
func (m *GetDiscMountPointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiscMountPointResponse.Marshal(b, m, deterministic)
}
func (m *GetDiscMountPointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiscMountPointResponse.Merge(m, src)
}
func (m *GetDiscMountPointResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiscMountPointResponse.Size(m)
}
func (m *GetDiscMountPointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiscMountPointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiscMountPointResponse proto.InternalMessageInfo

func (m *GetDiscMountPointResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetDiscMountPointResponse) GetMountPoint() string {
	if m != nil {
		return m.MountPoint
	}
	return ""
}

type RecoverDiscDbResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecoverDiscDbResponse) Reset()         { *m = RecoverDiscDbResponse{} }
func (m *RecoverDiscDbResponse) String() string { return proto.CompactTextString(m) }
func (*RecoverDiscDbResponse) ProtoMessage()    {}
func (*RecoverDiscDbResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{24}
}

func (m *RecoverDiscDbResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecoverDiscDbResponse.Unmarshal(m, b)
}
func (m *RecoverDiscDbResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecoverDiscDbResponse.Marshal(b, m, deterministic)
}
func (m *RecoverDiscDbResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoverDiscDbResponse.Merge(m, src)
}
func (m *RecoverDiscDbResponse) XXX_Size() int {
	return xxx_messageInfo_RecoverDiscDbResponse.Size(m)
}
func (m *RecoverDiscDbResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoverDiscDbResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecoverDiscDbResponse proto.InternalMessageInfo

func (m *RecoverDiscDbResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type FixDiscStatusResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FixDiscStatusResponse) Reset()         { *m = FixDiscStatusResponse{} }
func (m *FixDiscStatusResponse) String() string { return proto.CompactTextString(m) }
func (*FixDiscStatusResponse) ProtoMessage()    {}
func (*FixDiscStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{25}
}

func (m *FixDiscStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixDiscStatusResponse.Unmarshal(m, b)
}
func (m *FixDiscStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixDiscStatusResponse.Marshal(b, m, deterministic)
}
func (m *FixDiscStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixDiscStatusResponse.Merge(m, src)
}
func (m *FixDiscStatusResponse) XXX_Size() int {
	return xxx_messageInfo_FixDiscStatusResponse.Size(m)
}
func (m *FixDiscStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FixDiscStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FixDiscStatusResponse proto.InternalMessageInfo

func (m *FixDiscStatusResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetCacheInfoResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	WriteBlockSize       int32    `protobuf:"varint,2,opt,name=writeBlockSize,proto3" json:"writeBlockSize,omitempty"`
	WriteFreeBlocks      int32    `protobuf:"varint,3,opt,name=writeFreeBlocks,proto3" json:"writeFreeBlocks,omitempty"`
	WriteErrorCode       int32    `protobuf:"varint,4,opt,name=writeErrorCode,proto3" json:"writeErrorCode,omitempty"`
	ReadBlockSize        int32    `protobuf:"varint,5,opt,name=readBlockSize,proto3" json:"readBlockSize,omitempty"`
	ReadFreeBlocks       int32    `protobuf:"varint,6,opt,name=readFreeBlocks,proto3" json:"readFreeBlocks,omitempty"`
	ReadErrorCode        int32    `protobuf:"varint,7,opt,name=readErrorCode,proto3" json:"readErrorCode,omitempty"`
	VerifyBlockSize      int32    `protobuf:"varint,9,opt,name=verifyBlockSize,proto3" json:"verifyBlockSize,omitempty"`
	VerifyFreeBlocks     int32    `protobuf:"varint,10,opt,name=verifyFreeBlocks,proto3" json:"verifyFreeBlocks,omitempty"`
	VerifyErrorCode      int32    `protobuf:"varint,11,opt,name=verifyErrorCode,proto3" json:"verifyErrorCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCacheInfoResponse) Reset()         { *m = GetCacheInfoResponse{} }
func (m *GetCacheInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetCacheInfoResponse) ProtoMessage()    {}
func (*GetCacheInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{26}
}

func (m *GetCacheInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCacheInfoResponse.Unmarshal(m, b)
}
func (m *GetCacheInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCacheInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetCacheInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCacheInfoResponse.Merge(m, src)
}
func (m *GetCacheInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetCacheInfoResponse.Size(m)
}
func (m *GetCacheInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCacheInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCacheInfoResponse proto.InternalMessageInfo

func (m *GetCacheInfoResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetCacheInfoResponse) GetWriteBlockSize() int32 {
	if m != nil {
		return m.WriteBlockSize
	}
	return 0
}

func (m *GetCacheInfoResponse) GetWriteFreeBlocks() int32 {
	if m != nil {
		return m.WriteFreeBlocks
	}
	return 0
}

func (m *GetCacheInfoResponse) GetWriteErrorCode() int32 {
	if m != nil {
		return m.WriteErrorCode
	}
	return 0
}

func (m *GetCacheInfoResponse) GetReadBlockSize() int32 {
	if m != nil {
		return m.ReadBlockSize
	}
	return 0
}

func (m *GetCacheInfoResponse) GetReadFreeBlocks() int32 {
	if m != nil {
		return m.ReadFreeBlocks
	}
	return 0
}

func (m *GetCacheInfoResponse) GetReadErrorCode() int32 {
	if m != nil {
		return m.ReadErrorCode
	}
	return 0
}

func (m *GetCacheInfoResponse) GetVerifyBlockSize() int32 {
	if m != nil {
		return m.VerifyBlockSize
	}
	return 0
}

func (m *GetCacheInfoResponse) GetVerifyFreeBlocks() int32 {
	if m != nil {
		return m.VerifyFreeBlocks
	}
	return 0
}

func (m *GetCacheInfoResponse) GetVerifyErrorCode() int32 {
	if m != nil {
		return m.VerifyErrorCode
	}
	return 0
}

type ResetResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetResponse) Reset()         { *m = ResetResponse{} }
func (m *ResetResponse) String() string { return proto.CompactTextString(m) }
func (*ResetResponse) ProtoMessage()    {}
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{27}
}

func (m *ResetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetResponse.Unmarshal(m, b)
}
func (m *ResetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetResponse.Marshal(b, m, deterministic)
}
func (m *ResetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetResponse.Merge(m, src)
}
func (m *ResetResponse) XXX_Size() int {
	return xxx_messageInfo_ResetResponse.Size(m)
}
func (m *ResetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetResponse proto.InternalMessageInfo

func (m *ResetResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type DriveInitResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DriveInitResponse) Reset()         { *m = DriveInitResponse{} }
func (m *DriveInitResponse) String() string { return proto.CompactTextString(m) }
func (*DriveInitResponse) ProtoMessage()    {}
func (*DriveInitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{28}
}

func (m *DriveInitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriveInitResponse.Unmarshal(m, b)
}
func (m *DriveInitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriveInitResponse.Marshal(b, m, deterministic)
}
func (m *DriveInitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriveInitResponse.Merge(m, src)
}
func (m *DriveInitResponse) XXX_Size() int {
	return xxx_messageInfo_DriveInitResponse.Size(m)
}
func (m *DriveInitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DriveInitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DriveInitResponse proto.InternalMessageInfo

func (m *DriveInitResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type DriveInfoResponse struct {
	Message              *Message   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	DriveInfo            *DriveInfo `protobuf:"bytes,2,opt,name=driveInfo,proto3" json:"driveInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DriveInfoResponse) Reset()         { *m = DriveInfoResponse{} }
func (m *DriveInfoResponse) String() string { return proto.CompactTextString(m) }
func (*DriveInfoResponse) ProtoMessage()    {}
func (*DriveInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{29}
}

func (m *DriveInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriveInfoResponse.Unmarshal(m, b)
}
func (m *DriveInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriveInfoResponse.Marshal(b, m, deterministic)
}
func (m *DriveInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriveInfoResponse.Merge(m, src)
}
func (m *DriveInfoResponse) XXX_Size() int {
	return xxx_messageInfo_DriveInfoResponse.Size(m)
}
func (m *DriveInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DriveInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DriveInfoResponse proto.InternalMessageInfo

func (m *DriveInfoResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *DriveInfoResponse) GetDriveInfo() *DriveInfo {
	if m != nil {
		return m.DriveInfo
	}
	return nil
}

type DriveInfo struct {
	ProductId            string   `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	Vendor               string   `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	SerialNo             string   `protobuf:"bytes,3,opt,name=serialNo,proto3" json:"serialNo,omitempty"`
	FwVersion            string   `protobuf:"bytes,4,opt,name=fwVersion,proto3" json:"fwVersion,omitempty"`
	CdReadTime           int32    `protobuf:"varint,5,opt,name=cdReadTime,proto3" json:"cdReadTime,omitempty"`
	CdWriteTime          int32    `protobuf:"varint,6,opt,name=cdWriteTime,proto3" json:"cdWriteTime,omitempty"`
	DvdReadTime          int32    `protobuf:"varint,7,opt,name=dvdReadTime,proto3" json:"dvdReadTime,omitempty"`
	DvdWriteTime         int32    `protobuf:"varint,8,opt,name=dvdWriteTime,proto3" json:"dvdWriteTime,omitempty"`
	BdReadTime           int32    `protobuf:"varint,9,opt,name=bdReadTime,proto3" json:"bdReadTime,omitempty"`
	BdWriteTime          int32    `protobuf:"varint,10,opt,name=bdWriteTime,proto3" json:"bdWriteTime,omitempty"`
	PowerOnTime          int32    `protobuf:"varint,11,opt,name=powerOnTime,proto3" json:"powerOnTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DriveInfo) Reset()         { *m = DriveInfo{} }
func (m *DriveInfo) String() string { return proto.CompactTextString(m) }
func (*DriveInfo) ProtoMessage()    {}
func (*DriveInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{30}
}

func (m *DriveInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriveInfo.Unmarshal(m, b)
}
func (m *DriveInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriveInfo.Marshal(b, m, deterministic)
}
func (m *DriveInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriveInfo.Merge(m, src)
}
func (m *DriveInfo) XXX_Size() int {
	return xxx_messageInfo_DriveInfo.Size(m)
}
func (m *DriveInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DriveInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DriveInfo proto.InternalMessageInfo

func (m *DriveInfo) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *DriveInfo) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *DriveInfo) GetSerialNo() string {
	if m != nil {
		return m.SerialNo
	}
	return ""
}

func (m *DriveInfo) GetFwVersion() string {
	if m != nil {
		return m.FwVersion
	}
	return ""
}

func (m *DriveInfo) GetCdReadTime() int32 {
	if m != nil {
		return m.CdReadTime
	}
	return 0
}

func (m *DriveInfo) GetCdWriteTime() int32 {
	if m != nil {
		return m.CdWriteTime
	}
	return 0
}

func (m *DriveInfo) GetDvdReadTime() int32 {
	if m != nil {
		return m.DvdReadTime
	}
	return 0
}

func (m *DriveInfo) GetDvdWriteTime() int32 {
	if m != nil {
		return m.DvdWriteTime
	}
	return 0
}

func (m *DriveInfo) GetBdReadTime() int32 {
	if m != nil {
		return m.BdReadTime
	}
	return 0
}

func (m *DriveInfo) GetBdWriteTime() int32 {
	if m != nil {
		return m.BdWriteTime
	}
	return 0
}

func (m *DriveInfo) GetPowerOnTime() int32 {
	if m != nil {
		return m.PowerOnTime
	}
	return 0
}

type TestUnityReadyResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	IsReady              bool     `protobuf:"varint,2,opt,name=isReady,proto3" json:"isReady,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestUnityReadyResponse) Reset()         { *m = TestUnityReadyResponse{} }
func (m *TestUnityReadyResponse) String() string { return proto.CompactTextString(m) }
func (*TestUnityReadyResponse) ProtoMessage()    {}
func (*TestUnityReadyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{31}
}

func (m *TestUnityReadyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestUnityReadyResponse.Unmarshal(m, b)
}
func (m *TestUnityReadyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestUnityReadyResponse.Marshal(b, m, deterministic)
}
func (m *TestUnityReadyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestUnityReadyResponse.Merge(m, src)
}
func (m *TestUnityReadyResponse) XXX_Size() int {
	return xxx_messageInfo_TestUnityReadyResponse.Size(m)
}
func (m *TestUnityReadyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestUnityReadyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestUnityReadyResponse proto.InternalMessageInfo

func (m *TestUnityReadyResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TestUnityReadyResponse) GetIsReady() bool {
	if m != nil {
		return m.IsReady
	}
	return false
}

type DriveRebootResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DriveRebootResponse) Reset()         { *m = DriveRebootResponse{} }
func (m *DriveRebootResponse) String() string { return proto.CompactTextString(m) }
func (*DriveRebootResponse) ProtoMessage()    {}
func (*DriveRebootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{32}
}

func (m *DriveRebootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriveRebootResponse.Unmarshal(m, b)
}
func (m *DriveRebootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriveRebootResponse.Marshal(b, m, deterministic)
}
func (m *DriveRebootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriveRebootResponse.Merge(m, src)
}
func (m *DriveRebootResponse) XXX_Size() int {
	return xxx_messageInfo_DriveRebootResponse.Size(m)
}
func (m *DriveRebootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DriveRebootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DriveRebootResponse proto.InternalMessageInfo

func (m *DriveRebootResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type DrivePowerOnResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrivePowerOnResponse) Reset()         { *m = DrivePowerOnResponse{} }
func (m *DrivePowerOnResponse) String() string { return proto.CompactTextString(m) }
func (*DrivePowerOnResponse) ProtoMessage()    {}
func (*DrivePowerOnResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{33}
}

func (m *DrivePowerOnResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrivePowerOnResponse.Unmarshal(m, b)
}
func (m *DrivePowerOnResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrivePowerOnResponse.Marshal(b, m, deterministic)
}
func (m *DrivePowerOnResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrivePowerOnResponse.Merge(m, src)
}
func (m *DrivePowerOnResponse) XXX_Size() int {
	return xxx_messageInfo_DrivePowerOnResponse.Size(m)
}
func (m *DrivePowerOnResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DrivePowerOnResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DrivePowerOnResponse proto.InternalMessageInfo

func (m *DrivePowerOnResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type DrivePowerOffResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrivePowerOffResponse) Reset()         { *m = DrivePowerOffResponse{} }
func (m *DrivePowerOffResponse) String() string { return proto.CompactTextString(m) }
func (*DrivePowerOffResponse) ProtoMessage()    {}
func (*DrivePowerOffResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{34}
}

func (m *DrivePowerOffResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrivePowerOffResponse.Unmarshal(m, b)
}
func (m *DrivePowerOffResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrivePowerOffResponse.Marshal(b, m, deterministic)
}
func (m *DrivePowerOffResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrivePowerOffResponse.Merge(m, src)
}
func (m *DrivePowerOffResponse) XXX_Size() int {
	return xxx_messageInfo_DrivePowerOffResponse.Size(m)
}
func (m *DrivePowerOffResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DrivePowerOffResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DrivePowerOffResponse proto.InternalMessageInfo

func (m *DrivePowerOffResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetDrivePowerStatusResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDrivePowerStatusResponse) Reset()         { *m = GetDrivePowerStatusResponse{} }
func (m *GetDrivePowerStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetDrivePowerStatusResponse) ProtoMessage()    {}
func (*GetDrivePowerStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{35}
}

func (m *GetDrivePowerStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDrivePowerStatusResponse.Unmarshal(m, b)
}
func (m *GetDrivePowerStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDrivePowerStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetDrivePowerStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDrivePowerStatusResponse.Merge(m, src)
}
func (m *GetDrivePowerStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetDrivePowerStatusResponse.Size(m)
}
func (m *GetDrivePowerStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDrivePowerStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDrivePowerStatusResponse proto.InternalMessageInfo

func (m *GetDrivePowerStatusResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetDrivePowerStatusResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type OpenDriveTrayRequest struct {
	DisableUnlock        bool     `protobuf:"varint,1,opt,name=disableUnlock,proto3" json:"disableUnlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenDriveTrayRequest) Reset()         { *m = OpenDriveTrayRequest{} }
func (m *OpenDriveTrayRequest) String() string { return proto.CompactTextString(m) }
func (*OpenDriveTrayRequest) ProtoMessage()    {}
func (*OpenDriveTrayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{36}
}

func (m *OpenDriveTrayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenDriveTrayRequest.Unmarshal(m, b)
}
func (m *OpenDriveTrayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenDriveTrayRequest.Marshal(b, m, deterministic)
}
func (m *OpenDriveTrayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenDriveTrayRequest.Merge(m, src)
}
func (m *OpenDriveTrayRequest) XXX_Size() int {
	return xxx_messageInfo_OpenDriveTrayRequest.Size(m)
}
func (m *OpenDriveTrayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenDriveTrayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenDriveTrayRequest proto.InternalMessageInfo

func (m *OpenDriveTrayRequest) GetDisableUnlock() bool {
	if m != nil {
		return m.DisableUnlock
	}
	return false
}

type OpenDriveTrayResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenDriveTrayResponse) Reset()         { *m = OpenDriveTrayResponse{} }
func (m *OpenDriveTrayResponse) String() string { return proto.CompactTextString(m) }
func (*OpenDriveTrayResponse) ProtoMessage()    {}
func (*OpenDriveTrayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{37}
}

func (m *OpenDriveTrayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenDriveTrayResponse.Unmarshal(m, b)
}
func (m *OpenDriveTrayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenDriveTrayResponse.Marshal(b, m, deterministic)
}
func (m *OpenDriveTrayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenDriveTrayResponse.Merge(m, src)
}
func (m *OpenDriveTrayResponse) XXX_Size() int {
	return xxx_messageInfo_OpenDriveTrayResponse.Size(m)
}
func (m *OpenDriveTrayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenDriveTrayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenDriveTrayResponse proto.InternalMessageInfo

func (m *OpenDriveTrayResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type CloseDriveTrayResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseDriveTrayResponse) Reset()         { *m = CloseDriveTrayResponse{} }
func (m *CloseDriveTrayResponse) String() string { return proto.CompactTextString(m) }
func (*CloseDriveTrayResponse) ProtoMessage()    {}
func (*CloseDriveTrayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{38}
}

func (m *CloseDriveTrayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseDriveTrayResponse.Unmarshal(m, b)
}
func (m *CloseDriveTrayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseDriveTrayResponse.Marshal(b, m, deterministic)
}
func (m *CloseDriveTrayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseDriveTrayResponse.Merge(m, src)
}
func (m *CloseDriveTrayResponse) XXX_Size() int {
	return xxx_messageInfo_CloseDriveTrayResponse.Size(m)
}
func (m *CloseDriveTrayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseDriveTrayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseDriveTrayResponse proto.InternalMessageInfo

func (m *CloseDriveTrayResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetDriveTrayStatusResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDriveTrayStatusResponse) Reset()         { *m = GetDriveTrayStatusResponse{} }
func (m *GetDriveTrayStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetDriveTrayStatusResponse) ProtoMessage()    {}
func (*GetDriveTrayStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{39}
}

func (m *GetDriveTrayStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDriveTrayStatusResponse.Unmarshal(m, b)
}
func (m *GetDriveTrayStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDriveTrayStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetDriveTrayStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDriveTrayStatusResponse.Merge(m, src)
}
func (m *GetDriveTrayStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetDriveTrayStatusResponse.Size(m)
}
func (m *GetDriveTrayStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDriveTrayStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDriveTrayStatusResponse proto.InternalMessageInfo

func (m *GetDriveTrayStatusResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetDriveTrayStatusResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type SimulateDriveTrayChangesResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimulateDriveTrayChangesResponse) Reset()         { *m = SimulateDriveTrayChangesResponse{} }
func (m *SimulateDriveTrayChangesResponse) String() string { return proto.CompactTextString(m) }
func (*SimulateDriveTrayChangesResponse) ProtoMessage()    {}
func (*SimulateDriveTrayChangesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{40}
}

func (m *SimulateDriveTrayChangesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimulateDriveTrayChangesResponse.Unmarshal(m, b)
}
func (m *SimulateDriveTrayChangesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimulateDriveTrayChangesResponse.Marshal(b, m, deterministic)
}
func (m *SimulateDriveTrayChangesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimulateDriveTrayChangesResponse.Merge(m, src)
}
func (m *SimulateDriveTrayChangesResponse) XXX_Size() int {
	return xxx_messageInfo_SimulateDriveTrayChangesResponse.Size(m)
}
func (m *SimulateDriveTrayChangesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimulateDriveTrayChangesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimulateDriveTrayChangesResponse proto.InternalMessageInfo

func (m *SimulateDriveTrayChangesResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type SetTimeRequest struct {
	DataTime             string   `protobuf:"bytes,1,opt,name=dataTime,proto3" json:"dataTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTimeRequest) Reset()         { *m = SetTimeRequest{} }
func (m *SetTimeRequest) String() string { return proto.CompactTextString(m) }
func (*SetTimeRequest) ProtoMessage()    {}
func (*SetTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{41}
}

func (m *SetTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTimeRequest.Unmarshal(m, b)
}
func (m *SetTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTimeRequest.Marshal(b, m, deterministic)
}
func (m *SetTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTimeRequest.Merge(m, src)
}
func (m *SetTimeRequest) XXX_Size() int {
	return xxx_messageInfo_SetTimeRequest.Size(m)
}
func (m *SetTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTimeRequest proto.InternalMessageInfo

func (m *SetTimeRequest) GetDataTime() string {
	if m != nil {
		return m.DataTime
	}
	return ""
}

type SetTimeResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTimeResponse) Reset()         { *m = SetTimeResponse{} }
func (m *SetTimeResponse) String() string { return proto.CompactTextString(m) }
func (*SetTimeResponse) ProtoMessage()    {}
func (*SetTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{42}
}

func (m *SetTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTimeResponse.Unmarshal(m, b)
}
func (m *SetTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTimeResponse.Marshal(b, m, deterministic)
}
func (m *SetTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTimeResponse.Merge(m, src)
}
func (m *SetTimeResponse) XXX_Size() int {
	return xxx_messageInfo_SetTimeResponse.Size(m)
}
func (m *SetTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetTimeResponse proto.InternalMessageInfo

func (m *SetTimeResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type SystemRebootResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemRebootResponse) Reset()         { *m = SystemRebootResponse{} }
func (m *SystemRebootResponse) String() string { return proto.CompactTextString(m) }
func (*SystemRebootResponse) ProtoMessage()    {}
func (*SystemRebootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{43}
}

func (m *SystemRebootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemRebootResponse.Unmarshal(m, b)
}
func (m *SystemRebootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemRebootResponse.Marshal(b, m, deterministic)
}
func (m *SystemRebootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemRebootResponse.Merge(m, src)
}
func (m *SystemRebootResponse) XXX_Size() int {
	return xxx_messageInfo_SystemRebootResponse.Size(m)
}
func (m *SystemRebootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemRebootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SystemRebootResponse proto.InternalMessageInfo

func (m *SystemRebootResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type SystemPoweroffResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemPoweroffResponse) Reset()         { *m = SystemPoweroffResponse{} }
func (m *SystemPoweroffResponse) String() string { return proto.CompactTextString(m) }
func (*SystemPoweroffResponse) ProtoMessage()    {}
func (*SystemPoweroffResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{44}
}

func (m *SystemPoweroffResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemPoweroffResponse.Unmarshal(m, b)
}
func (m *SystemPoweroffResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemPoweroffResponse.Marshal(b, m, deterministic)
}
func (m *SystemPoweroffResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemPoweroffResponse.Merge(m, src)
}
func (m *SystemPoweroffResponse) XXX_Size() int {
	return xxx_messageInfo_SystemPoweroffResponse.Size(m)
}
func (m *SystemPoweroffResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemPoweroffResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SystemPoweroffResponse proto.InternalMessageInfo

func (m *SystemPoweroffResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type FirmwareVersion struct {
	AppVersion           string   `protobuf:"bytes,1,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	AppDate              string   `protobuf:"bytes,2,opt,name=appDate,proto3" json:"appDate,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FirmwareVersion) Reset()         { *m = FirmwareVersion{} }
func (m *FirmwareVersion) String() string { return proto.CompactTextString(m) }
func (*FirmwareVersion) ProtoMessage()    {}
func (*FirmwareVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{45}
}

func (m *FirmwareVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirmwareVersion.Unmarshal(m, b)
}
func (m *FirmwareVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirmwareVersion.Marshal(b, m, deterministic)
}
func (m *FirmwareVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirmwareVersion.Merge(m, src)
}
func (m *FirmwareVersion) XXX_Size() int {
	return xxx_messageInfo_FirmwareVersion.Size(m)
}
func (m *FirmwareVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_FirmwareVersion.DiscardUnknown(m)
}

var xxx_messageInfo_FirmwareVersion proto.InternalMessageInfo

func (m *FirmwareVersion) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *FirmwareVersion) GetAppDate() string {
	if m != nil {
		return m.AppDate
	}
	return ""
}

func (m *FirmwareVersion) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type SystemInfoResponse struct {
	Message              *Message           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SysInfo              string             `protobuf:"bytes,2,opt,name=sysInfo,proto3" json:"sysInfo,omitempty"`
	FirmwareVersion      []*FirmwareVersion `protobuf:"bytes,3,rep,name=firmwareVersion,proto3" json:"firmwareVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SystemInfoResponse) Reset()         { *m = SystemInfoResponse{} }
func (m *SystemInfoResponse) String() string { return proto.CompactTextString(m) }
func (*SystemInfoResponse) ProtoMessage()    {}
func (*SystemInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{46}
}

func (m *SystemInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemInfoResponse.Unmarshal(m, b)
}
func (m *SystemInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemInfoResponse.Marshal(b, m, deterministic)
}
func (m *SystemInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfoResponse.Merge(m, src)
}
func (m *SystemInfoResponse) XXX_Size() int {
	return xxx_messageInfo_SystemInfoResponse.Size(m)
}
func (m *SystemInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfoResponse proto.InternalMessageInfo

func (m *SystemInfoResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SystemInfoResponse) GetSysInfo() string {
	if m != nil {
		return m.SysInfo
	}
	return ""
}

func (m *SystemInfoResponse) GetFirmwareVersion() []*FirmwareVersion {
	if m != nil {
		return m.FirmwareVersion
	}
	return nil
}

type RemoveObjectRequest struct {
	RemoveMode           int32    `protobuf:"varint,1,opt,name=removeMode,proto3" json:"removeMode,omitempty"`
	FilePathHash         string   `protobuf:"bytes,2,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,3,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	OffsetStart          int64    `protobuf:"varint,4,opt,name=offsetStart,proto3" json:"offsetStart,omitempty"`
	OffsetEnd            int64    `protobuf:"varint,5,opt,name=offsetEnd,proto3" json:"offsetEnd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveObjectRequest) Reset()         { *m = RemoveObjectRequest{} }
func (m *RemoveObjectRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveObjectRequest) ProtoMessage()    {}
func (*RemoveObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{47}
}

func (m *RemoveObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveObjectRequest.Unmarshal(m, b)
}
func (m *RemoveObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveObjectRequest.Marshal(b, m, deterministic)
}
func (m *RemoveObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveObjectRequest.Merge(m, src)
}
func (m *RemoveObjectRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveObjectRequest.Size(m)
}
func (m *RemoveObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveObjectRequest proto.InternalMessageInfo

func (m *RemoveObjectRequest) GetRemoveMode() int32 {
	if m != nil {
		return m.RemoveMode
	}
	return 0
}

func (m *RemoveObjectRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *RemoveObjectRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *RemoveObjectRequest) GetOffsetStart() int64 {
	if m != nil {
		return m.OffsetStart
	}
	return 0
}

func (m *RemoveObjectRequest) GetOffsetEnd() int64 {
	if m != nil {
		return m.OffsetEnd
	}
	return 0
}

type RemoveObjectResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveObjectResponse) Reset()         { *m = RemoveObjectResponse{} }
func (m *RemoveObjectResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveObjectResponse) ProtoMessage()    {}
func (*RemoveObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{48}
}

func (m *RemoveObjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveObjectResponse.Unmarshal(m, b)
}
func (m *RemoveObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveObjectResponse.Marshal(b, m, deterministic)
}
func (m *RemoveObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveObjectResponse.Merge(m, src)
}
func (m *RemoveObjectResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveObjectResponse.Size(m)
}
func (m *RemoveObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveObjectResponse proto.InternalMessageInfo

func (m *RemoveObjectResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type RenameObjectRequest struct {
	FilePathHash         string     `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string     `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	BlockInfo            *BlockInfo `protobuf:"bytes,3,opt,name=blockInfo,proto3" json:"blockInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RenameObjectRequest) Reset()         { *m = RenameObjectRequest{} }
func (m *RenameObjectRequest) String() string { return proto.CompactTextString(m) }
func (*RenameObjectRequest) ProtoMessage()    {}
func (*RenameObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{49}
}

func (m *RenameObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameObjectRequest.Unmarshal(m, b)
}
func (m *RenameObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameObjectRequest.Marshal(b, m, deterministic)
}
func (m *RenameObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameObjectRequest.Merge(m, src)
}
func (m *RenameObjectRequest) XXX_Size() int {
	return xxx_messageInfo_RenameObjectRequest.Size(m)
}
func (m *RenameObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenameObjectRequest proto.InternalMessageInfo

func (m *RenameObjectRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *RenameObjectRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *RenameObjectRequest) GetBlockInfo() *BlockInfo {
	if m != nil {
		return m.BlockInfo
	}
	return nil
}

type RenameObjectResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameObjectResponse) Reset()         { *m = RenameObjectResponse{} }
func (m *RenameObjectResponse) String() string { return proto.CompactTextString(m) }
func (*RenameObjectResponse) ProtoMessage()    {}
func (*RenameObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{50}
}

func (m *RenameObjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameObjectResponse.Unmarshal(m, b)
}
func (m *RenameObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameObjectResponse.Marshal(b, m, deterministic)
}
func (m *RenameObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameObjectResponse.Merge(m, src)
}
func (m *RenameObjectResponse) XXX_Size() int {
	return xxx_messageInfo_RenameObjectResponse.Size(m)
}
func (m *RenameObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenameObjectResponse proto.InternalMessageInfo

func (m *RenameObjectResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type RemoveBucketRequest struct {
	FilePathHash         string   `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBucketRequest) Reset()         { *m = RemoveBucketRequest{} }
func (m *RemoveBucketRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveBucketRequest) ProtoMessage()    {}
func (*RemoveBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{51}
}

func (m *RemoveBucketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBucketRequest.Unmarshal(m, b)
}
func (m *RemoveBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBucketRequest.Marshal(b, m, deterministic)
}
func (m *RemoveBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBucketRequest.Merge(m, src)
}
func (m *RemoveBucketRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveBucketRequest.Size(m)
}
func (m *RemoveBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBucketRequest proto.InternalMessageInfo

func (m *RemoveBucketRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *RemoveBucketRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

type RemoveBucketResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBucketResponse) Reset()         { *m = RemoveBucketResponse{} }
func (m *RemoveBucketResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveBucketResponse) ProtoMessage()    {}
func (*RemoveBucketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{52}
}

func (m *RemoveBucketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBucketResponse.Unmarshal(m, b)
}
func (m *RemoveBucketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBucketResponse.Marshal(b, m, deterministic)
}
func (m *RemoveBucketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBucketResponse.Merge(m, src)
}
func (m *RemoveBucketResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveBucketResponse.Size(m)
}
func (m *RemoveBucketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBucketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBucketResponse proto.InternalMessageInfo

func (m *RemoveBucketResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type ObjectExistsRequest struct {
	FilePathHash         string   `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	FilePath             string   `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	FileType             int32    `protobuf:"varint,4,opt,name=fileType,proto3" json:"fileType,omitempty"`
	OffsetStart          int64    `protobuf:"varint,5,opt,name=offsetStart,proto3" json:"offsetStart,omitempty"`
	OffsetEnd            int64    `protobuf:"varint,6,opt,name=offsetEnd,proto3" json:"offsetEnd,omitempty"`
	CheckCode            int32    `protobuf:"varint,7,opt,name=checkCode,proto3" json:"checkCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectExistsRequest) Reset()         { *m = ObjectExistsRequest{} }
func (m *ObjectExistsRequest) String() string { return proto.CompactTextString(m) }
func (*ObjectExistsRequest) ProtoMessage()    {}
func (*ObjectExistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{53}
}

func (m *ObjectExistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectExistsRequest.Unmarshal(m, b)
}
func (m *ObjectExistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectExistsRequest.Marshal(b, m, deterministic)
}
func (m *ObjectExistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectExistsRequest.Merge(m, src)
}
func (m *ObjectExistsRequest) XXX_Size() int {
	return xxx_messageInfo_ObjectExistsRequest.Size(m)
}
func (m *ObjectExistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectExistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectExistsRequest proto.InternalMessageInfo

func (m *ObjectExistsRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *ObjectExistsRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *ObjectExistsRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *ObjectExistsRequest) GetFileType() int32 {
	if m != nil {
		return m.FileType
	}
	return 0
}

func (m *ObjectExistsRequest) GetOffsetStart() int64 {
	if m != nil {
		return m.OffsetStart
	}
	return 0
}

func (m *ObjectExistsRequest) GetOffsetEnd() int64 {
	if m != nil {
		return m.OffsetEnd
	}
	return 0
}

func (m *ObjectExistsRequest) GetCheckCode() int32 {
	if m != nil {
		return m.CheckCode
	}
	return 0
}

type ObjectExistsResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	IsExists             bool     `protobuf:"varint,2,opt,name=isExists,proto3" json:"isExists,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectExistsResponse) Reset()         { *m = ObjectExistsResponse{} }
func (m *ObjectExistsResponse) String() string { return proto.CompactTextString(m) }
func (*ObjectExistsResponse) ProtoMessage()    {}
func (*ObjectExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{54}
}

func (m *ObjectExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectExistsResponse.Unmarshal(m, b)
}
func (m *ObjectExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectExistsResponse.Marshal(b, m, deterministic)
}
func (m *ObjectExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectExistsResponse.Merge(m, src)
}
func (m *ObjectExistsResponse) XXX_Size() int {
	return xxx_messageInfo_ObjectExistsResponse.Size(m)
}
func (m *ObjectExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectExistsResponse proto.InternalMessageInfo

func (m *ObjectExistsResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ObjectExistsResponse) GetIsExists() bool {
	if m != nil {
		return m.IsExists
	}
	return false
}

func (m *ObjectExistsResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type StatObjectRequest struct {
	FilePathHash         string   `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	FilePath             string   `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatObjectRequest) Reset()         { *m = StatObjectRequest{} }
func (m *StatObjectRequest) String() string { return proto.CompactTextString(m) }
func (*StatObjectRequest) ProtoMessage()    {}
func (*StatObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{55}
}

func (m *StatObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatObjectRequest.Unmarshal(m, b)
}
func (m *StatObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatObjectRequest.Marshal(b, m, deterministic)
}
func (m *StatObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatObjectRequest.Merge(m, src)
}
func (m *StatObjectRequest) XXX_Size() int {
	return xxx_messageInfo_StatObjectRequest.Size(m)
}
func (m *StatObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatObjectRequest proto.InternalMessageInfo

func (m *StatObjectRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *StatObjectRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *StatObjectRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

type StatObjectResponse struct {
	Message              *Message    `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ObjectInfo           *ObjectInfo `protobuf:"bytes,2,opt,name=objectInfo,proto3" json:"objectInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StatObjectResponse) Reset()         { *m = StatObjectResponse{} }
func (m *StatObjectResponse) String() string { return proto.CompactTextString(m) }
func (*StatObjectResponse) ProtoMessage()    {}
func (*StatObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{56}
}

func (m *StatObjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatObjectResponse.Unmarshal(m, b)
}
func (m *StatObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatObjectResponse.Marshal(b, m, deterministic)
}
func (m *StatObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatObjectResponse.Merge(m, src)
}
func (m *StatObjectResponse) XXX_Size() int {
	return xxx_messageInfo_StatObjectResponse.Size(m)
}
func (m *StatObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatObjectResponse proto.InternalMessageInfo

func (m *StatObjectResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *StatObjectResponse) GetObjectInfo() *ObjectInfo {
	if m != nil {
		return m.ObjectInfo
	}
	return nil
}

type ListObjectsRequest struct {
	FilePathHash         string   `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	FilePath             string   `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListObjectsRequest) Reset()         { *m = ListObjectsRequest{} }
func (m *ListObjectsRequest) String() string { return proto.CompactTextString(m) }
func (*ListObjectsRequest) ProtoMessage()    {}
func (*ListObjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{57}
}

func (m *ListObjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListObjectsRequest.Unmarshal(m, b)
}
func (m *ListObjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListObjectsRequest.Marshal(b, m, deterministic)
}
func (m *ListObjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListObjectsRequest.Merge(m, src)
}
func (m *ListObjectsRequest) XXX_Size() int {
	return xxx_messageInfo_ListObjectsRequest.Size(m)
}
func (m *ListObjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListObjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListObjectsRequest proto.InternalMessageInfo

func (m *ListObjectsRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *ListObjectsRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *ListObjectsRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

type ListObjectsResponse struct {
	Message              *Message      `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ObjectInfo           []*ObjectInfo `protobuf:"bytes,2,rep,name=objectInfo,proto3" json:"objectInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListObjectsResponse) Reset()         { *m = ListObjectsResponse{} }
func (m *ListObjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListObjectsResponse) ProtoMessage()    {}
func (*ListObjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{58}
}

func (m *ListObjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListObjectsResponse.Unmarshal(m, b)
}
func (m *ListObjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListObjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListObjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListObjectsResponse.Merge(m, src)
}
func (m *ListObjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListObjectsResponse.Size(m)
}
func (m *ListObjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListObjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListObjectsResponse proto.InternalMessageInfo

func (m *ListObjectsResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ListObjectsResponse) GetObjectInfo() []*ObjectInfo {
	if m != nil {
		return m.ObjectInfo
	}
	return nil
}

type ListObjectBlockRequest struct {
	FilePathHash         string   `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListObjectBlockRequest) Reset()         { *m = ListObjectBlockRequest{} }
func (m *ListObjectBlockRequest) String() string { return proto.CompactTextString(m) }
func (*ListObjectBlockRequest) ProtoMessage()    {}
func (*ListObjectBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{59}
}

func (m *ListObjectBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListObjectBlockRequest.Unmarshal(m, b)
}
func (m *ListObjectBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListObjectBlockRequest.Marshal(b, m, deterministic)
}
func (m *ListObjectBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListObjectBlockRequest.Merge(m, src)
}
func (m *ListObjectBlockRequest) XXX_Size() int {
	return xxx_messageInfo_ListObjectBlockRequest.Size(m)
}
func (m *ListObjectBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListObjectBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListObjectBlockRequest proto.InternalMessageInfo

func (m *ListObjectBlockRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *ListObjectBlockRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

type ListObjectBlockResponse struct {
	Message              *Message     `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	BlockInfo            []*BlockInfo `protobuf:"bytes,2,rep,name=blockInfo,proto3" json:"blockInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListObjectBlockResponse) Reset()         { *m = ListObjectBlockResponse{} }
func (m *ListObjectBlockResponse) String() string { return proto.CompactTextString(m) }
func (*ListObjectBlockResponse) ProtoMessage()    {}
func (*ListObjectBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{60}
}

func (m *ListObjectBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListObjectBlockResponse.Unmarshal(m, b)
}
func (m *ListObjectBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListObjectBlockResponse.Marshal(b, m, deterministic)
}
func (m *ListObjectBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListObjectBlockResponse.Merge(m, src)
}
func (m *ListObjectBlockResponse) XXX_Size() int {
	return xxx_messageInfo_ListObjectBlockResponse.Size(m)
}
func (m *ListObjectBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListObjectBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListObjectBlockResponse proto.InternalMessageInfo

func (m *ListObjectBlockResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ListObjectBlockResponse) GetBlockInfo() []*BlockInfo {
	if m != nil {
		return m.BlockInfo
	}
	return nil
}

type ObjectInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	ModTime              int64    `protobuf:"varint,4,opt,name=modTime,proto3" json:"modTime,omitempty"`
	IsDir                bool     `protobuf:"varint,5,opt,name=isDir,proto3" json:"isDir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectInfo) Reset()         { *m = ObjectInfo{} }
func (m *ObjectInfo) String() string { return proto.CompactTextString(m) }
func (*ObjectInfo) ProtoMessage()    {}
func (*ObjectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{61}
}

func (m *ObjectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectInfo.Unmarshal(m, b)
}
func (m *ObjectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectInfo.Marshal(b, m, deterministic)
}
func (m *ObjectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectInfo.Merge(m, src)
}
func (m *ObjectInfo) XXX_Size() int {
	return xxx_messageInfo_ObjectInfo.Size(m)
}
func (m *ObjectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectInfo proto.InternalMessageInfo

func (m *ObjectInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ObjectInfo) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ObjectInfo) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *ObjectInfo) GetModTime() int64 {
	if m != nil {
		return m.ModTime
	}
	return 0
}

func (m *ObjectInfo) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

type MakeBucketRequest struct {
	FilePathHash         string   `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	FilePath             string   `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeBucketRequest) Reset()         { *m = MakeBucketRequest{} }
func (m *MakeBucketRequest) String() string { return proto.CompactTextString(m) }
func (*MakeBucketRequest) ProtoMessage()    {}
func (*MakeBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{62}
}

func (m *MakeBucketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeBucketRequest.Unmarshal(m, b)
}
func (m *MakeBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeBucketRequest.Marshal(b, m, deterministic)
}
func (m *MakeBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeBucketRequest.Merge(m, src)
}
func (m *MakeBucketRequest) XXX_Size() int {
	return xxx_messageInfo_MakeBucketRequest.Size(m)
}
func (m *MakeBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakeBucketRequest proto.InternalMessageInfo

func (m *MakeBucketRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *MakeBucketRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *MakeBucketRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

type MakeBucketResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeBucketResponse) Reset()         { *m = MakeBucketResponse{} }
func (m *MakeBucketResponse) String() string { return proto.CompactTextString(m) }
func (*MakeBucketResponse) ProtoMessage()    {}
func (*MakeBucketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{63}
}

func (m *MakeBucketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeBucketResponse.Unmarshal(m, b)
}
func (m *MakeBucketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeBucketResponse.Marshal(b, m, deterministic)
}
func (m *MakeBucketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeBucketResponse.Merge(m, src)
}
func (m *MakeBucketResponse) XXX_Size() int {
	return xxx_messageInfo_MakeBucketResponse.Size(m)
}
func (m *MakeBucketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeBucketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakeBucketResponse proto.InternalMessageInfo

func (m *MakeBucketResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetBlockInfoRequest struct {
	FilePathHash         string   `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	OffsetStart          int64    `protobuf:"varint,3,opt,name=offsetStart,proto3" json:"offsetStart,omitempty"`
	OffsetEnd            int64    `protobuf:"varint,4,opt,name=offsetEnd,proto3" json:"offsetEnd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockInfoRequest) Reset()         { *m = GetBlockInfoRequest{} }
func (m *GetBlockInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockInfoRequest) ProtoMessage()    {}
func (*GetBlockInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{64}
}

func (m *GetBlockInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockInfoRequest.Unmarshal(m, b)
}
func (m *GetBlockInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockInfoRequest.Merge(m, src)
}
func (m *GetBlockInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockInfoRequest.Size(m)
}
func (m *GetBlockInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockInfoRequest proto.InternalMessageInfo

func (m *GetBlockInfoRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *GetBlockInfoRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *GetBlockInfoRequest) GetOffsetStart() int64 {
	if m != nil {
		return m.OffsetStart
	}
	return 0
}

func (m *GetBlockInfoRequest) GetOffsetEnd() int64 {
	if m != nil {
		return m.OffsetEnd
	}
	return 0
}

type GetBlockInfoResponse struct {
	Message              *Message   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	BlockInfo            *BlockInfo `protobuf:"bytes,2,opt,name=blockInfo,proto3" json:"blockInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetBlockInfoResponse) Reset()         { *m = GetBlockInfoResponse{} }
func (m *GetBlockInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockInfoResponse) ProtoMessage()    {}
func (*GetBlockInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{65}
}

func (m *GetBlockInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockInfoResponse.Unmarshal(m, b)
}
func (m *GetBlockInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetBlockInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockInfoResponse.Merge(m, src)
}
func (m *GetBlockInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockInfoResponse.Size(m)
}
func (m *GetBlockInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockInfoResponse proto.InternalMessageInfo

func (m *GetBlockInfoResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetBlockInfoResponse) GetBlockInfo() *BlockInfo {
	if m != nil {
		return m.BlockInfo
	}
	return nil
}

type VerifyObjectRequest struct {
	FilePathHash         string   `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	OffsetStart          int64    `protobuf:"varint,3,opt,name=offsetStart,proto3" json:"offsetStart,omitempty"`
	OffsetEnd            int64    `protobuf:"varint,4,opt,name=offsetEnd,proto3" json:"offsetEnd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyObjectRequest) Reset()         { *m = VerifyObjectRequest{} }
func (m *VerifyObjectRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyObjectRequest) ProtoMessage()    {}
func (*VerifyObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{66}
}

func (m *VerifyObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyObjectRequest.Unmarshal(m, b)
}
func (m *VerifyObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyObjectRequest.Marshal(b, m, deterministic)
}
func (m *VerifyObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyObjectRequest.Merge(m, src)
}
func (m *VerifyObjectRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyObjectRequest.Size(m)
}
func (m *VerifyObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyObjectRequest proto.InternalMessageInfo

func (m *VerifyObjectRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *VerifyObjectRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *VerifyObjectRequest) GetOffsetStart() int64 {
	if m != nil {
		return m.OffsetStart
	}
	return 0
}

func (m *VerifyObjectRequest) GetOffsetEnd() int64 {
	if m != nil {
		return m.OffsetEnd
	}
	return 0
}

type VerifyObjectResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyObjectResponse) Reset()         { *m = VerifyObjectResponse{} }
func (m *VerifyObjectResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyObjectResponse) ProtoMessage()    {}
func (*VerifyObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{67}
}

func (m *VerifyObjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyObjectResponse.Unmarshal(m, b)
}
func (m *VerifyObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyObjectResponse.Marshal(b, m, deterministic)
}
func (m *VerifyObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyObjectResponse.Merge(m, src)
}
func (m *VerifyObjectResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyObjectResponse.Size(m)
}
func (m *VerifyObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyObjectResponse proto.InternalMessageInfo

func (m *VerifyObjectResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type VerifyObjectStatusRequest struct {
	FilePathHash         string   `protobuf:"bytes,1,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,2,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	OffsetStart          int64    `protobuf:"varint,3,opt,name=offsetStart,proto3" json:"offsetStart,omitempty"`
	OffsetEnd            int64    `protobuf:"varint,4,opt,name=offsetEnd,proto3" json:"offsetEnd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyObjectStatusRequest) Reset()         { *m = VerifyObjectStatusRequest{} }
func (m *VerifyObjectStatusRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyObjectStatusRequest) ProtoMessage()    {}
func (*VerifyObjectStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{68}
}

func (m *VerifyObjectStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyObjectStatusRequest.Unmarshal(m, b)
}
func (m *VerifyObjectStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyObjectStatusRequest.Marshal(b, m, deterministic)
}
func (m *VerifyObjectStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyObjectStatusRequest.Merge(m, src)
}
func (m *VerifyObjectStatusRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyObjectStatusRequest.Size(m)
}
func (m *VerifyObjectStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyObjectStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyObjectStatusRequest proto.InternalMessageInfo

func (m *VerifyObjectStatusRequest) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *VerifyObjectStatusRequest) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *VerifyObjectStatusRequest) GetOffsetStart() int64 {
	if m != nil {
		return m.OffsetStart
	}
	return 0
}

func (m *VerifyObjectStatusRequest) GetOffsetEnd() int64 {
	if m != nil {
		return m.OffsetEnd
	}
	return 0
}

type VerifyObjectStatusResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Progress             int32    `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyObjectStatusResponse) Reset()         { *m = VerifyObjectStatusResponse{} }
func (m *VerifyObjectStatusResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyObjectStatusResponse) ProtoMessage()    {}
func (*VerifyObjectStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{69}
}

func (m *VerifyObjectStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyObjectStatusResponse.Unmarshal(m, b)
}
func (m *VerifyObjectStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyObjectStatusResponse.Marshal(b, m, deterministic)
}
func (m *VerifyObjectStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyObjectStatusResponse.Merge(m, src)
}
func (m *VerifyObjectStatusResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyObjectStatusResponse.Size(m)
}
func (m *VerifyObjectStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyObjectStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyObjectStatusResponse proto.InternalMessageInfo

func (m *VerifyObjectStatusResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *VerifyObjectStatusResponse) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

type PutObjectRequest struct {
	BlockInfo            *BlockInfo `protobuf:"bytes,1,opt,name=blockInfo,proto3" json:"blockInfo,omitempty"`
	DataBuffer           []byte     `protobuf:"bytes,2,opt,name=dataBuffer,proto3" json:"dataBuffer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PutObjectRequest) Reset()         { *m = PutObjectRequest{} }
func (m *PutObjectRequest) String() string { return proto.CompactTextString(m) }
func (*PutObjectRequest) ProtoMessage()    {}
func (*PutObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{70}
}

func (m *PutObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutObjectRequest.Unmarshal(m, b)
}
func (m *PutObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutObjectRequest.Marshal(b, m, deterministic)
}
func (m *PutObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutObjectRequest.Merge(m, src)
}
func (m *PutObjectRequest) XXX_Size() int {
	return xxx_messageInfo_PutObjectRequest.Size(m)
}
func (m *PutObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutObjectRequest proto.InternalMessageInfo

func (m *PutObjectRequest) GetBlockInfo() *BlockInfo {
	if m != nil {
		return m.BlockInfo
	}
	return nil
}

func (m *PutObjectRequest) GetDataBuffer() []byte {
	if m != nil {
		return m.DataBuffer
	}
	return nil
}

type BlockInfo struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FilePathHash         string   `protobuf:"bytes,2,opt,name=filePathHash,proto3" json:"filePathHash,omitempty"`
	DirectoryName        string   `protobuf:"bytes,3,opt,name=directoryName,proto3" json:"directoryName,omitempty"`
	DirectoryPathHash    string   `protobuf:"bytes,4,opt,name=directoryPathHash,proto3" json:"directoryPathHash,omitempty"`
	FilePath             string   `protobuf:"bytes,5,opt,name=filePath,proto3" json:"filePath,omitempty"`
	FileType             int32    `protobuf:"varint,6,opt,name=fileType,proto3" json:"fileType,omitempty"`
	FileStatus           int32    `protobuf:"varint,7,opt,name=fileStatus,proto3" json:"fileStatus,omitempty"`
	CreateTime           int64    `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	FileMode             uint32   `protobuf:"varint,9,opt,name=fileMode,proto3" json:"fileMode,omitempty"`
	PartSize             int32    `protobuf:"varint,10,opt,name=partSize,proto3" json:"partSize,omitempty"`
	FileSize             int64    `protobuf:"varint,11,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	OffsetStart          int64    `protobuf:"varint,12,opt,name=offsetStart,proto3" json:"offsetStart,omitempty"`
	OffsetEnd            int64    `protobuf:"varint,13,opt,name=offsetEnd,proto3" json:"offsetEnd,omitempty"`
	CheckCode            uint32   `protobuf:"varint,14,opt,name=checkCode,proto3" json:"checkCode,omitempty"`
	TmpStatus            int32    `protobuf:"varint,15,opt,name=tmpStatus,proto3" json:"tmpStatus,omitempty"`
	UdfFlag              int32    `protobuf:"varint,16,opt,name=udfFlag,proto3" json:"udfFlag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockInfo) Reset()         { *m = BlockInfo{} }
func (m *BlockInfo) String() string { return proto.CompactTextString(m) }
func (*BlockInfo) ProtoMessage()    {}
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{71}
}

func (m *BlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfo.Unmarshal(m, b)
}
func (m *BlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfo.Marshal(b, m, deterministic)
}
func (m *BlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfo.Merge(m, src)
}
func (m *BlockInfo) XXX_Size() int {
	return xxx_messageInfo_BlockInfo.Size(m)
}
func (m *BlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfo proto.InternalMessageInfo

func (m *BlockInfo) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *BlockInfo) GetFilePathHash() string {
	if m != nil {
		return m.FilePathHash
	}
	return ""
}

func (m *BlockInfo) GetDirectoryName() string {
	if m != nil {
		return m.DirectoryName
	}
	return ""
}

func (m *BlockInfo) GetDirectoryPathHash() string {
	if m != nil {
		return m.DirectoryPathHash
	}
	return ""
}

func (m *BlockInfo) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *BlockInfo) GetFileType() int32 {
	if m != nil {
		return m.FileType
	}
	return 0
}

func (m *BlockInfo) GetFileStatus() int32 {
	if m != nil {
		return m.FileStatus
	}
	return 0
}

func (m *BlockInfo) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *BlockInfo) GetFileMode() uint32 {
	if m != nil {
		return m.FileMode
	}
	return 0
}

func (m *BlockInfo) GetPartSize() int32 {
	if m != nil {
		return m.PartSize
	}
	return 0
}

func (m *BlockInfo) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *BlockInfo) GetOffsetStart() int64 {
	if m != nil {
		return m.OffsetStart
	}
	return 0
}

func (m *BlockInfo) GetOffsetEnd() int64 {
	if m != nil {
		return m.OffsetEnd
	}
	return 0
}

func (m *BlockInfo) GetCheckCode() uint32 {
	if m != nil {
		return m.CheckCode
	}
	return 0
}

func (m *BlockInfo) GetTmpStatus() int32 {
	if m != nil {
		return m.TmpStatus
	}
	return 0
}

func (m *BlockInfo) GetUdfFlag() int32 {
	if m != nil {
		return m.UdfFlag
	}
	return 0
}

type PutObjectResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutObjectResponse) Reset()         { *m = PutObjectResponse{} }
func (m *PutObjectResponse) String() string { return proto.CompactTextString(m) }
func (*PutObjectResponse) ProtoMessage()    {}
func (*PutObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{72}
}

func (m *PutObjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutObjectResponse.Unmarshal(m, b)
}
func (m *PutObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutObjectResponse.Marshal(b, m, deterministic)
}
func (m *PutObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutObjectResponse.Merge(m, src)
}
func (m *PutObjectResponse) XXX_Size() int {
	return xxx_messageInfo_PutObjectResponse.Size(m)
}
func (m *PutObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutObjectResponse proto.InternalMessageInfo

func (m *PutObjectResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type GetObjectRequest struct {
	BlockInfo            *BlockInfo `protobuf:"bytes,1,opt,name=blockInfo,proto3" json:"blockInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetObjectRequest) Reset()         { *m = GetObjectRequest{} }
func (m *GetObjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetObjectRequest) ProtoMessage()    {}
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{73}
}

func (m *GetObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectRequest.Unmarshal(m, b)
}
func (m *GetObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectRequest.Marshal(b, m, deterministic)
}
func (m *GetObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectRequest.Merge(m, src)
}
func (m *GetObjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetObjectRequest.Size(m)
}
func (m *GetObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectRequest proto.InternalMessageInfo

func (m *GetObjectRequest) GetBlockInfo() *BlockInfo {
	if m != nil {
		return m.BlockInfo
	}
	return nil
}

type GetObjectResponse struct {
	Message              *Message   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	BlockInfo            *BlockInfo `protobuf:"bytes,2,opt,name=blockInfo,proto3" json:"blockInfo,omitempty"`
	DataBuffer           []byte     `protobuf:"bytes,3,opt,name=dataBuffer,proto3" json:"dataBuffer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetObjectResponse) Reset()         { *m = GetObjectResponse{} }
func (m *GetObjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetObjectResponse) ProtoMessage()    {}
func (*GetObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a611cbc7cbf8ac85, []int{74}
}

func (m *GetObjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectResponse.Unmarshal(m, b)
}
func (m *GetObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectResponse.Marshal(b, m, deterministic)
}
func (m *GetObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectResponse.Merge(m, src)
}
func (m *GetObjectResponse) XXX_Size() int {
	return xxx_messageInfo_GetObjectResponse.Size(m)
}
func (m *GetObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectResponse proto.InternalMessageInfo

func (m *GetObjectResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetObjectResponse) GetBlockInfo() *BlockInfo {
	if m != nil {
		return m.BlockInfo
	}
	return nil
}

func (m *GetObjectResponse) GetDataBuffer() []byte {
	if m != nil {
		return m.DataBuffer
	}
	return nil
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "odrive.EmptyRequest")
	proto.RegisterType((*Message)(nil), "odrive.Message")
	proto.RegisterType((*StopResponse)(nil), "odrive.StopResponse")
	proto.RegisterType((*DiscInfoResponse)(nil), "odrive.DiscInfoResponse")
	proto.RegisterType((*MediaInfo)(nil), "odrive.MediaInfo")
	proto.RegisterType((*DiscFsInfo)(nil), "odrive.DiscFsInfo")
	proto.RegisterType((*CompleteDiscResponse)(nil), "odrive.CompleteDiscResponse")
	proto.RegisterType((*FormatDiscResponse)(nil), "odrive.FormatDiscResponse")
	proto.RegisterType((*SetSpeedConfRequest)(nil), "odrive.SetSpeedConfRequest")
	proto.RegisterType((*SetSpeedConfResponse)(nil), "odrive.SetSpeedConfResponse")
	proto.RegisterType((*GetSpeedConfRequest)(nil), "odrive.GetSpeedConfRequest")
	proto.RegisterType((*GetSpeedConfResponse)(nil), "odrive.GetSpeedConfResponse")
	proto.RegisterType((*SetBurnConfigRequest)(nil), "odrive.SetBurnConfigRequest")
	proto.RegisterType((*SetBurnConfigResponse)(nil), "odrive.SetBurnConfigResponse")
	proto.RegisterType((*GetBurnConfigResponse)(nil), "odrive.GetBurnConfigResponse")
	proto.RegisterType((*SetBurnModeResquest)(nil), "odrive.SetBurnModeResquest")
	proto.RegisterType((*SetBurnModeResponse)(nil), "odrive.SetBurnModeResponse")
	proto.RegisterType((*GetBurnModeResponse)(nil), "odrive.GetBurnModeResponse")
	proto.RegisterType((*InitDiscResponse)(nil), "odrive.InitDiscResponse")
	proto.RegisterType((*LoadDiscRequest)(nil), "odrive.LoadDiscRequest")
	proto.RegisterType((*LoadDiscResponse)(nil), "odrive.LoadDiscResponse")
	proto.RegisterType((*UnLoadDiscResponse)(nil), "odrive.UnLoadDiscResponse")
	proto.RegisterType((*UnLoadUdfDiscResponse)(nil), "odrive.UnLoadUdfDiscResponse")
	proto.RegisterType((*GetDiscMountPointResponse)(nil), "odrive.GetDiscMountPointResponse")
	proto.RegisterType((*RecoverDiscDbResponse)(nil), "odrive.RecoverDiscDbResponse")
	proto.RegisterType((*FixDiscStatusResponse)(nil), "odrive.FixDiscStatusResponse")
	proto.RegisterType((*GetCacheInfoResponse)(nil), "odrive.GetCacheInfoResponse")
	proto.RegisterType((*ResetResponse)(nil), "odrive.ResetResponse")
	proto.RegisterType((*DriveInitResponse)(nil), "odrive.DriveInitResponse")
	proto.RegisterType((*DriveInfoResponse)(nil), "odrive.DriveInfoResponse")
	proto.RegisterType((*DriveInfo)(nil), "odrive.DriveInfo")
	proto.RegisterType((*TestUnityReadyResponse)(nil), "odrive.TestUnityReadyResponse")
	proto.RegisterType((*DriveRebootResponse)(nil), "odrive.DriveRebootResponse")
	proto.RegisterType((*DrivePowerOnResponse)(nil), "odrive.DrivePowerOnResponse")
	proto.RegisterType((*DrivePowerOffResponse)(nil), "odrive.DrivePowerOffResponse")
	proto.RegisterType((*GetDrivePowerStatusResponse)(nil), "odrive.GetDrivePowerStatusResponse")
	proto.RegisterType((*OpenDriveTrayRequest)(nil), "odrive.OpenDriveTrayRequest")
	proto.RegisterType((*OpenDriveTrayResponse)(nil), "odrive.OpenDriveTrayResponse")
	proto.RegisterType((*CloseDriveTrayResponse)(nil), "odrive.CloseDriveTrayResponse")
	proto.RegisterType((*GetDriveTrayStatusResponse)(nil), "odrive.GetDriveTrayStatusResponse")
	proto.RegisterType((*SimulateDriveTrayChangesResponse)(nil), "odrive.SimulateDriveTrayChangesResponse")
	proto.RegisterType((*SetTimeRequest)(nil), "odrive.SetTimeRequest")
	proto.RegisterType((*SetTimeResponse)(nil), "odrive.SetTimeResponse")
	proto.RegisterType((*SystemRebootResponse)(nil), "odrive.SystemRebootResponse")
	proto.RegisterType((*SystemPoweroffResponse)(nil), "odrive.SystemPoweroffResponse")
	proto.RegisterType((*FirmwareVersion)(nil), "odrive.FirmwareVersion")
	proto.RegisterType((*SystemInfoResponse)(nil), "odrive.SystemInfoResponse")
	proto.RegisterType((*RemoveObjectRequest)(nil), "odrive.RemoveObjectRequest")
	proto.RegisterType((*RemoveObjectResponse)(nil), "odrive.RemoveObjectResponse")
	proto.RegisterType((*RenameObjectRequest)(nil), "odrive.RenameObjectRequest")
	proto.RegisterType((*RenameObjectResponse)(nil), "odrive.RenameObjectResponse")
	proto.RegisterType((*RemoveBucketRequest)(nil), "odrive.RemoveBucketRequest")
	proto.RegisterType((*RemoveBucketResponse)(nil), "odrive.RemoveBucketResponse")
	proto.RegisterType((*ObjectExistsRequest)(nil), "odrive.ObjectExistsRequest")
	proto.RegisterType((*ObjectExistsResponse)(nil), "odrive.ObjectExistsResponse")
	proto.RegisterType((*StatObjectRequest)(nil), "odrive.StatObjectRequest")
	proto.RegisterType((*StatObjectResponse)(nil), "odrive.StatObjectResponse")
	proto.RegisterType((*ListObjectsRequest)(nil), "odrive.ListObjectsRequest")
	proto.RegisterType((*ListObjectsResponse)(nil), "odrive.ListObjectsResponse")
	proto.RegisterType((*ListObjectBlockRequest)(nil), "odrive.ListObjectBlockRequest")
	proto.RegisterType((*ListObjectBlockResponse)(nil), "odrive.ListObjectBlockResponse")
	proto.RegisterType((*ObjectInfo)(nil), "odrive.ObjectInfo")
	proto.RegisterType((*MakeBucketRequest)(nil), "odrive.MakeBucketRequest")
	proto.RegisterType((*MakeBucketResponse)(nil), "odrive.MakeBucketResponse")
	proto.RegisterType((*GetBlockInfoRequest)(nil), "odrive.GetBlockInfoRequest")
	proto.RegisterType((*GetBlockInfoResponse)(nil), "odrive.GetBlockInfoResponse")
	proto.RegisterType((*VerifyObjectRequest)(nil), "odrive.VerifyObjectRequest")
	proto.RegisterType((*VerifyObjectResponse)(nil), "odrive.VerifyObjectResponse")
	proto.RegisterType((*VerifyObjectStatusRequest)(nil), "odrive.VerifyObjectStatusRequest")
	proto.RegisterType((*VerifyObjectStatusResponse)(nil), "odrive.VerifyObjectStatusResponse")
	proto.RegisterType((*PutObjectRequest)(nil), "odrive.PutObjectRequest")
	proto.RegisterType((*BlockInfo)(nil), "odrive.BlockInfo")
	proto.RegisterType((*PutObjectResponse)(nil), "odrive.PutObjectResponse")
	proto.RegisterType((*GetObjectRequest)(nil), "odrive.GetObjectRequest")
	proto.RegisterType((*GetObjectResponse)(nil), "odrive.GetObjectResponse")
}

func init() { proto.RegisterFile("odrive.proto", fileDescriptor_a611cbc7cbf8ac85) }

var fileDescriptor_a611cbc7cbf8ac85 = []byte{
	// 2616 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0x4f, 0x6f, 0x23, 0x49,
	0x15, 0x97, 0xd3, 0x76, 0x12, 0x3f, 0xdb, 0xf9, 0x53, 0xc9, 0x64, 0x3c, 0x9e, 0xd9, 0x90, 0x6d,
	0x10, 0xca, 0xa2, 0xd1, 0x2e, 0x04, 0x2e, 0x8c, 0xe6, 0xaf, 0xe3, 0x49, 0x88, 0x48, 0x66, 0xa2,
	0xf6, 0x64, 0x91, 0x40, 0x2b, 0xe8, 0xb8, 0xcb, 0x99, 0xde, 0xb1, 0xdd, 0xa6, 0xab, 0x9d, 0x4c,
	0xf6, 0xb6, 0x08, 0x8e, 0x88, 0x2b, 0x07, 0x4e, 0x5c, 0x38, 0x21, 0x3e, 0x06, 0x1f, 0x85, 0x4f,
	0x81, 0x84, 0xea, 0x55, 0xd7, 0x9f, 0x6e, 0x77, 0xc7, 0x49, 0x87, 0x08, 0x6e, 0x7e, 0xaf, 0xaa,
	0x7e, 0xf5, 0x5e, 0xd5, 0xeb, 0x57, 0x55, 0xef, 0x67, 0xa8, 0x07, 0x5e, 0xe8, 0x9f, 0xd3, 0xcf,
	0xc7, 0x61, 0x10, 0x05, 0x64, 0x5e, 0x48, 0xf6, 0x12, 0xd4, 0x5f, 0x0f, 0xc7, 0xd1, 0xa5, 0x43,
	0x7f, 0x3b, 0xa1, 0x2c, 0xb2, 0x4f, 0x60, 0xe1, 0x88, 0x32, 0xe6, 0x9e, 0x51, 0xf2, 0x08, 0xaa,
	0x3e, 0xeb, 0x4e, 0x7a, 0x3d, 0xca, 0x58, 0xb3, 0xb4, 0x55, 0xda, 0x5e, 0x74, 0xb4, 0x82, 0x10,
	0x28, 0xf7, 0x02, 0x8f, 0x36, 0xe7, 0xb6, 0x4a, 0xdb, 0x15, 0x07, 0x7f, 0x93, 0x26, 0x2c, 0x0c,
	0xc5, 0xe0, 0xa6, 0xb5, 0x55, 0xda, 0xae, 0x3a, 0x52, 0xb4, 0x7f, 0x0a, 0xf5, 0x6e, 0x14, 0x8c,
	0x1d, 0xca, 0xc6, 0xc1, 0x88, 0x51, 0xf2, 0x99, 0xee, 0xc9, 0x91, 0x6b, 0x3b, 0xcb, 0x9f, 0xc7,
	0xe6, 0xc5, 0xb3, 0xeb, 0xa1, 0x7f, 0x2d, 0xc1, 0x4a, 0xc7, 0x67, 0xbd, 0x83, 0x51, 0x3f, 0x28,
	0x30, 0x9e, 0x7c, 0x01, 0xd5, 0x21, 0xf5, 0x7c, 0x97, 0x8f, 0x47, 0x6b, 0x6b, 0x3b, 0xab, 0xba,
	0x73, 0xdc, 0xe0, 0xe8, 0x3e, 0x64, 0x07, 0xc0, 0xf3, 0x59, 0x6f, 0x8f, 0xe1, 0x08, 0x0b, 0x47,
	0x10, 0x39, 0xa2, 0xa3, 0x5a, 0x1c, 0xa3, 0x97, 0xfd, 0x87, 0x32, 0x54, 0x15, 0x18, 0x5f, 0x07,
	0xfa, 0xd1, 0x67, 0x11, 0xf5, 0xd0, 0xba, 0x8a, 0x23, 0x45, 0xde, 0xe2, 0xb3, 0xf6, 0xc0, 0x1d,
	0x7d, 0x40, 0x53, 0x16, 0x1d, 0x29, 0x92, 0x2d, 0xa8, 0xf9, 0x6c, 0x37, 0x18, 0x8e, 0x07, 0x94,
	0x8f, 0xb3, 0xb0, 0xd5, 0x54, 0x91, 0x16, 0x2c, 0x32, 0x1a, 0xfa, 0xee, 0xe0, 0x4d, 0xd0, 0x2c,
	0xe3, 0xf2, 0x2a, 0x99, 0xac, 0x80, 0x35, 0xf4, 0xbd, 0x66, 0x05, 0xd5, 0xfc, 0x27, 0xef, 0xcd,
	0xed, 0x7b, 0x77, 0x39, 0xa6, 0xcd, 0x79, 0x34, 0x42, 0xc9, 0x64, 0x13, 0xe0, 0x22, 0xf4, 0x23,
	0xda, 0x1d, 0x53, 0xea, 0x35, 0x17, 0xb6, 0xac, 0xed, 0x8a, 0x63, 0x68, 0xf8, 0xce, 0x47, 0x41,
	0xe4, 0x0e, 0xba, 0xfe, 0x37, 0xb4, 0xb9, 0xb8, 0x55, 0xda, 0xb6, 0x1c, 0xad, 0xe0, 0xc8, 0xfd,
	0x90, 0x52, 0x6c, 0xac, 0x62, 0xa3, 0x92, 0x79, 0xdb, 0x84, 0x51, 0x0f, 0xdb, 0x40, 0xb4, 0x49,
	0x99, 0xb7, 0x45, 0xa1, 0xdb, 0xfb, 0xf0, 0x66, 0x32, 0x6c, 0xd6, 0x84, 0x45, 0x52, 0x26, 0xdb,
	0xb0, 0x8c, 0xbf, 0xbb, 0x91, 0x1b, 0x4d, 0xd8, 0xa1, 0xcf, 0xa2, 0x66, 0x1d, 0xcd, 0x4a, 0xab,
	0xc9, 0xf7, 0xa0, 0x21, 0x54, 0xfe, 0x37, 0x14, 0xfb, 0x35, 0xb0, 0x5f, 0x52, 0x49, 0x1e, 0xc3,
	0x2a, 0x2a, 0x4e, 0xe2, 0xc9, 0xb1, 0xe7, 0x12, 0xf6, 0x9c, 0x6e, 0x20, 0x36, 0xd4, 0x85, 0x25,
	0x17, 0x2e, 0x76, 0x5c, 0xc6, 0x8e, 0x09, 0x1d, 0x9f, 0x77, 0xc2, 0x68, 0xd8, 0xa1, 0x7d, 0x7f,
	0x44, 0xbd, 0x03, 0xaf, 0xb9, 0x82, 0x6b, 0x9d, 0x54, 0xda, 0xbf, 0x2f, 0x01, 0xe8, 0x10, 0xe1,
	0x0b, 0xc9, 0x17, 0xfd, 0xd0, 0x3d, 0xa5, 0x03, 0x0c, 0x85, 0xaa, 0xa3, 0x15, 0x7c, 0x1b, 0xb8,
	0x70, 0xec, 0x32, 0x76, 0xe1, 0x61, 0x3c, 0x54, 0x1d, 0x43, 0x43, 0x36, 0x60, 0xbe, 0xcf, 0x70,
	0x03, 0x2d, 0x5c, 0xae, 0x58, 0xe2, 0xa1, 0x82, 0xd1, 0x2a, 0x56, 0x05, 0x63, 0xa1, 0xe2, 0x98,
	0x2a, 0xfb, 0x15, 0xac, 0xcb, 0xb8, 0xe1, 0xd6, 0x14, 0xf9, 0xec, 0x5e, 0x00, 0xd9, 0x0b, 0xc2,
	0xa1, 0x1b, 0x15, 0x05, 0xd8, 0x87, 0xb5, 0x2e, 0x8d, 0x30, 0xa0, 0x76, 0x83, 0x51, 0x3f, 0x4e,
	0x30, 0x89, 0xb8, 0x2c, 0xa5, 0xe2, 0x72, 0x1d, 0x2a, 0x0c, 0x43, 0x52, 0x24, 0x15, 0x21, 0x70,
	0x67, 0x92, 0x40, 0x37, 0xb7, 0xe5, 0x47, 0xb0, 0xb6, 0x7f, 0x33, 0x5b, 0x6c, 0x06, 0xeb, 0xfb,
	0xb7, 0x9b, 0x35, 0x01, 0x3f, 0x97, 0xe7, 0xaa, 0x65, 0xba, 0x3a, 0x40, 0x57, 0xdb, 0x93, 0x70,
	0xc4, 0xe7, 0xf4, 0xcf, 0xa4, 0xa1, 0x77, 0x12, 0x47, 0x76, 0x1b, 0xee, 0xa5, 0x66, 0xbb, 0xf9,
	0xca, 0xfe, 0xb9, 0x04, 0xf7, 0xf6, 0x6f, 0x09, 0x92, 0x74, 0x6f, 0xee, 0x6a, 0xf7, 0xac, 0x2b,
	0xdc, 0x2b, 0x27, 0xdc, 0xfb, 0x0c, 0x03, 0x90, 0x5b, 0x76, 0x14, 0x78, 0xd4, 0xa1, 0x4c, 0xac,
	0x25, 0x81, 0xf2, 0x90, 0x1f, 0x5c, 0x62, 0xc3, 0xf1, 0xb7, 0xfd, 0x32, 0xdd, 0xf5, 0xc6, 0xeb,
	0xf0, 0x0e, 0x23, 0xec, 0x16, 0x08, 0xca, 0xae, 0x39, 0xc3, 0xae, 0x67, 0xb0, 0x72, 0x30, 0xf2,
	0x0b, 0x7f, 0x82, 0x3f, 0x87, 0xe5, 0xc3, 0xc0, 0xf5, 0xc4, 0x70, 0x15, 0x49, 0xbd, 0x01, 0x75,
	0x43, 0x23, 0xe6, 0xb5, 0x82, 0x47, 0xec, 0x20, 0x70, 0x3d, 0x33, 0x62, 0xa5, 0xcc, 0x6d, 0xd1,
	0x60, 0x85, 0xf2, 0xc9, 0xc9, 0xe8, 0x36, 0x00, 0x6d, 0xb8, 0x27, 0x00, 0x4e, 0xbc, 0x7e, 0x51,
	0x8c, 0x3e, 0x3c, 0xd8, 0xa7, 0xb8, 0x9c, 0x47, 0xc1, 0x64, 0x14, 0x1d, 0x07, 0xfe, 0x28, 0x2a,
	0xb2, 0x57, 0x9b, 0x00, 0x43, 0x05, 0x20, 0xbf, 0x38, 0xad, 0xe1, 0xb6, 0x3a, 0xb4, 0x17, 0x9c,
	0xd3, 0x90, 0xcf, 0xd5, 0x39, 0x2d, 0xe8, 0xef, 0x9e, 0xff, 0x91, 0x8f, 0x17, 0x49, 0xbd, 0x08,
	0xc6, 0x3f, 0x2c, 0xcc, 0x62, 0xbb, 0x6e, 0xef, 0x3d, 0x2d, 0x7a, 0x7f, 0xfa, 0x3e, 0x2c, 0xe1,
	0xd5, 0xa0, 0x3d, 0x08, 0xc4, 0x01, 0x1b, 0x47, 0x46, 0x4a, 0xcb, 0x8f, 0x70, 0xd4, 0xec, 0x85,
	0x54, 0x68, 0x59, 0x9c, 0x6e, 0xd2, 0x6a, 0x85, 0xf8, 0x3a, 0x0c, 0x83, 0x70, 0x97, 0xc7, 0x7c,
	0xd9, 0x40, 0x54, 0x5a, 0x7e, 0xe4, 0x86, 0xd4, 0xf5, 0xf4, 0xc4, 0x15, 0xec, 0x96, 0x54, 0x72,
	0x34, 0xae, 0x30, 0xa6, 0x15, 0xd7, 0x9d, 0x94, 0x56, 0xa2, 0xe9, 0x49, 0x17, 0x34, 0x9a, 0x9e,
	0x73, 0x1b, 0x96, 0xcf, 0x69, 0xe8, 0xf7, 0x2f, 0xf5, 0xac, 0x55, 0xe1, 0x45, 0x4a, 0x4d, 0x7e,
	0x00, 0x2b, 0x42, 0x65, 0xcc, 0x0c, 0xd8, 0x75, 0x4a, 0xaf, 0x51, 0xf5, 0xec, 0x35, 0x13, 0x55,
	0xa9, 0xed, 0x27, 0xd0, 0x70, 0x28, 0xa3, 0x45, 0xa2, 0xd2, 0x7e, 0x0e, 0xab, 0x1d, 0xde, 0xc2,
	0x53, 0x46, 0x91, 0xf1, 0x81, 0x1a, 0x5f, 0xf8, 0xa6, 0xed, 0xc9, 0xf1, 0xe9, 0x9b, 0xb6, 0x06,
	0xd6, 0x7d, 0xec, 0x7f, 0xcd, 0x41, 0x55, 0x35, 0xf0, 0xd4, 0x34, 0x0e, 0x03, 0x6f, 0xd2, 0x8b,
	0x0e, 0x3c, 0x79, 0xc8, 0x29, 0x05, 0xcf, 0xf2, 0xe7, 0x74, 0xe4, 0x05, 0x61, 0xfc, 0xb9, 0xc5,
	0x52, 0xe2, 0x56, 0x6c, 0xa5, 0x6e, 0xc5, 0x8f, 0xa0, 0xda, 0xbf, 0xf8, 0x92, 0x86, 0xcc, 0x0f,
	0x46, 0xf1, 0x95, 0x59, 0x2b, 0xf8, 0x47, 0xdc, 0xf3, 0x1c, 0xea, 0x7a, 0xef, 0xfc, 0xa1, 0x8c,
	0x2d, 0x43, 0xc3, 0xaf, 0x59, 0x3d, 0xef, 0x17, 0x3c, 0x24, 0xb1, 0x83, 0x88, 0x2a, 0x53, 0xc5,
	0x7b, 0x78, 0xe7, 0x1a, 0x42, 0x04, 0x94, 0xa9, 0xe2, 0x37, 0x4b, 0xef, 0xdc, 0x00, 0x59, 0xc4,
	0x2e, 0x09, 0x1d, 0xb7, 0xe3, 0x54, 0x83, 0x88, 0x68, 0x33, 0x34, 0x7c, 0x96, 0x53, 0x03, 0x42,
	0xc4, 0x98, 0xa9, 0xe2, 0x3d, 0xc6, 0xc1, 0x05, 0x0d, 0xdf, 0x8e, 0xb0, 0x87, 0x08, 0x2d, 0x53,
	0x65, 0x7f, 0x05, 0x1b, 0xef, 0x28, 0x8b, 0x4e, 0x46, 0x3e, 0x7f, 0xea, 0xb9, 0xde, 0x65, 0x91,
	0xfd, 0xc5, 0xc7, 0x0b, 0x8e, 0xd6, 0x8f, 0x17, 0x14, 0xf9, 0xf9, 0x89, 0xfb, 0xe8, 0xd0, 0xd3,
	0x20, 0x28, 0x14, 0x7b, 0xaf, 0x60, 0x1d, 0x11, 0x8e, 0x85, 0xd1, 0x05, 0x13, 0xa6, 0x01, 0xd1,
	0x2f, 0x74, 0x51, 0xfc, 0x0d, 0x3c, 0xe4, 0x07, 0x84, 0x82, 0x29, 0x9c, 0x7a, 0x79, 0xbc, 0x32,
	0x71, 0x3f, 0x17, 0xe9, 0x32, 0x96, 0xec, 0xa7, 0xb0, 0xfe, 0x76, 0x4c, 0x47, 0x38, 0xc5, 0xbb,
	0xd0, 0x95, 0x0f, 0x6f, 0x9e, 0x9e, 0x3c, 0x9f, 0xb9, 0xa7, 0x03, 0x7a, 0x32, 0xe2, 0x49, 0x23,
	0x7e, 0x71, 0x27, 0x95, 0xdc, 0xc7, 0xd4, 0xe8, 0x9b, 0xfb, 0xb8, 0x0b, 0x1b, 0xbb, 0x83, 0x80,
	0xd1, 0x5b, 0x81, 0xfc, 0x1a, 0x5a, 0x72, 0xa1, 0x38, 0xc4, 0x7f, 0x7f, 0x9d, 0x8e, 0x60, 0xab,
	0xeb, 0x0f, 0x27, 0x03, 0x37, 0xd2, 0x86, 0xee, 0xbe, 0x77, 0x47, 0x67, 0xb4, 0xd0, 0x49, 0xf8,
	0x18, 0x96, 0xba, 0x34, 0xe2, 0xdf, 0x82, 0x79, 0xf9, 0x77, 0x23, 0x17, 0xbf, 0x18, 0x91, 0x6d,
	0x94, 0x6c, 0x3f, 0x85, 0x65, 0xd5, 0xbb, 0x50, 0x2c, 0x77, 0x2f, 0x59, 0x44, 0x87, 0xc5, 0x3f,
	0x87, 0x5d, 0xd8, 0x10, 0x10, 0x18, 0x85, 0x41, 0xb1, 0x60, 0xfe, 0x0a, 0x96, 0xf7, 0xfc, 0x70,
	0x78, 0xe1, 0x86, 0xd4, 0xc8, 0x79, 0xee, 0x78, 0x2c, 0x53, 0xa2, 0x70, 0xdb, 0xd0, 0xf0, 0x4f,
	0xdc, 0x1d, 0x8f, 0x3b, 0x6e, 0x44, 0xe3, 0x34, 0x2b, 0x45, 0xb2, 0x02, 0x56, 0xe4, 0x9e, 0xc5,
	0x29, 0x96, 0xff, 0xb4, 0xff, 0x52, 0x02, 0x22, 0x8c, 0x2c, 0x7a, 0x60, 0x34, 0x61, 0x81, 0x5d,
	0x32, 0x75, 0x5c, 0x54, 0x1d, 0x29, 0x92, 0x57, 0xb0, 0xdc, 0x4f, 0x9a, 0xde, 0xb4, 0xb6, 0xac,
	0xed, 0xda, 0xce, 0x7d, 0x09, 0x96, 0xf2, 0xcc, 0x49, 0xf7, 0xb7, 0xff, 0x59, 0x82, 0x35, 0x87,
	0x0e, 0x83, 0x73, 0xfa, 0xf6, 0xf4, 0x6b, 0xda, 0x8b, 0xe4, 0xbe, 0x6f, 0x02, 0x84, 0xa8, 0x3e,
	0xd2, 0xaf, 0x00, 0x43, 0xc3, 0x53, 0x76, 0xdf, 0x1f, 0xd0, 0x63, 0x37, 0x7a, 0xff, 0x33, 0x97,
	0xbd, 0x8f, 0x2d, 0x4b, 0xe8, 0xc8, 0x63, 0x58, 0xf5, 0xfc, 0x90, 0xf6, 0xa2, 0x20, 0xbc, 0x54,
	0x1d, 0xc5, 0xd2, 0x4c, 0x37, 0xf0, 0xf4, 0x1c, 0xf4, 0xfb, 0x8c, 0x46, 0xdd, 0xc8, 0x0d, 0x23,
	0x3c, 0x88, 0x2c, 0xc7, 0x54, 0xf1, 0x83, 0x4a, 0x88, 0xaf, 0x47, 0xa2, 0x88, 0x63, 0x39, 0x5a,
	0xc1, 0xe3, 0x29, 0xe9, 0x48, 0xa1, 0x67, 0xda, 0x9a, 0x43, 0x47, 0xee, 0x30, 0xb5, 0x18, 0x69,
	0x67, 0x4b, 0xd7, 0x75, 0x76, 0x2e, 0xcf, 0xd9, 0x2f, 0xa0, 0x7a, 0xca, 0x53, 0x95, 0x51, 0x3c,
	0x53, 0x97, 0x80, 0xb6, 0x6c, 0x70, 0x74, 0x1f, 0xe1, 0x9d, 0x69, 0xd9, 0xcd, 0xbd, 0x3b, 0x93,
	0x3b, 0xdd, 0x9e, 0xf4, 0x3e, 0xd0, 0xbb, 0x73, 0x4e, 0xef, 0x84, 0x9c, 0xe8, 0xe6, 0xb6, 0xfe,
	0xbb, 0x04, 0x6b, 0xc2, 0xd3, 0xd7, 0x1f, 0x7d, 0x16, 0xb1, 0xbb, 0xdb, 0x89, 0x16, 0x2c, 0xca,
	0xd1, 0xf2, 0x66, 0x24, 0x65, 0xd9, 0x66, 0xbc, 0x9a, 0x95, 0x9c, 0x0e, 0xd7, 0xca, 0x8c, 0x70,
	0x9d, 0x4f, 0x85, 0x2b, 0x3e, 0x31, 0xdf, 0xd3, 0xde, 0x07, 0xe3, 0x92, 0xad, 0x15, 0xf6, 0x04,
	0xd6, 0x93, 0xee, 0x17, 0xaa, 0xab, 0xf8, 0x4c, 0x0c, 0x8f, 0x2f, 0x22, 0x4a, 0x36, 0x8e, 0x13,
	0x2b, 0x71, 0x9c, 0x7c, 0x5b, 0x82, 0x55, 0x7e, 0x48, 0xdd, 0x75, 0xf8, 0x5f, 0xb1, 0xe8, 0x36,
	0x03, 0x62, 0x9a, 0x70, 0x73, 0xc7, 0x77, 0x00, 0x02, 0x1c, 0x6c, 0xdc, 0xb0, 0x55, 0x65, 0xfa,
	0xad, 0x6a, 0x71, 0x8c, 0x5e, 0xf6, 0xef, 0x4a, 0x40, 0x0e, 0x7d, 0x16, 0xcf, 0xfa, 0xbf, 0x09,
	0x37, 0x3b, 0x82, 0xb5, 0x84, 0x0d, 0xb7, 0x77, 0xdd, 0xba, 0x86, 0xeb, 0x5f, 0xc3, 0x86, 0x9e,
	0x15, 0x73, 0xcf, 0xdd, 0x65, 0x86, 0x09, 0xdc, 0x9f, 0x9a, 0xab, 0xd0, 0x0b, 0x4a, 0x27, 0x4f,
	0xe1, 0xe4, 0xd5, 0xc9, 0xf3, 0x23, 0x80, 0x76, 0x9e, 0x10, 0x28, 0xf3, 0x44, 0x1a, 0xbb, 0x83,
	0xbf, 0xb9, 0x8e, 0xc9, 0x47, 0xbb, 0xe5, 0xe0, 0x6f, 0x55, 0x6a, 0xe2, 0xdb, 0xd4, 0x10, 0xa5,
	0x26, 0xe4, 0x6e, 0x02, 0xf1, 0x04, 0x11, 0x07, 0x94, 0x14, 0xc9, 0x3a, 0x54, 0x7c, 0xd6, 0xf1,
	0x43, 0xcc, 0x04, 0x8b, 0x8e, 0x10, 0xf0, 0x83, 0x3a, 0x72, 0x3f, 0xdc, 0x75, 0xca, 0xbd, 0x32,
	0xac, 0x5e, 0x00, 0x31, 0x4d, 0xb8, 0x79, 0x32, 0xfe, 0x5b, 0x49, 0x94, 0xed, 0xd4, 0xd2, 0xde,
	0x99, 0x1b, 0xa9, 0xa4, 0x6a, 0xcd, 0x48, 0xaa, 0xe5, 0xf4, 0x1d, 0x20, 0xc4, 0x42, 0x8e, 0x61,
	0xe8, 0xad, 0x83, 0x6b, 0xf6, 0xc9, 0xcc, 0x57, 0xe7, 0x4b, 0xac, 0x4f, 0xdc, 0x75, 0xd6, 0xbc,
	0xed, 0xea, 0xbc, 0x82, 0xf5, 0xa4, 0xa1, 0x37, 0x0f, 0x85, 0xbf, 0x97, 0xe0, 0x81, 0x89, 0x21,
	0x5f, 0x34, 0xff, 0xaf, 0x2e, 0xf7, 0xa0, 0x95, 0x65, 0x6e, 0xa1, 0xd3, 0x74, 0x1c, 0x06, 0x67,
	0x21, 0x65, 0xf2, 0x09, 0xa6, 0x64, 0xbb, 0x07, 0x2b, 0xc7, 0x93, 0xd4, 0x99, 0x99, 0x08, 0xa3,
	0xd2, 0xec, 0x30, 0xc2, 0xfa, 0xbd, 0x1b, 0xb9, 0xed, 0x49, 0xbf, 0x4f, 0x45, 0xf5, 0xa6, 0xee,
	0x18, 0x1a, 0xfb, 0xdb, 0x32, 0x54, 0xd5, 0x40, 0xf9, 0xbd, 0xbf, 0xd1, 0x79, 0x4c, 0xc9, 0xd7,
	0xba, 0x9a, 0xe3, 0x3b, 0x3a, 0x5e, 0x6c, 0x04, 0x11, 0x49, 0x23, 0xa9, 0xcc, 0xde, 0xab, 0xf2,
	0x75, 0x72, 0x50, 0xe5, 0x8a, 0x9b, 0xd4, 0x7c, 0xea, 0x26, 0xb5, 0x09, 0xc0, 0x7f, 0xc7, 0x3c,
	0x9d, 0xb8, 0x0a, 0x19, 0x1a, 0xac, 0x40, 0x85, 0xd4, 0x35, 0x6a, 0x43, 0x96, 0x63, 0x68, 0x24,
	0x36, 0x3e, 0x54, 0xaa, 0x98, 0xab, 0x95, 0x8c, 0xdb, 0xe6, 0x86, 0x91, 0x62, 0x5a, 0xf9, 0xb6,
	0xc5, 0xb2, 0x1c, 0x87, 0x6d, 0xb5, 0x98, 0xa1, 0x8d, 0xe5, 0x74, 0xdc, 0xd5, 0x67, 0xc4, 0x5d,
	0xe3, 0xca, 0xdb, 0xdd, 0x12, 0x1a, 0xa5, 0x15, 0xc8, 0x1c, 0x0f, 0xc7, 0xb1, 0xc3, 0xcb, 0xe2,
	0xee, 0xa7, 0x14, 0xfc, 0x8c, 0x99, 0x78, 0xfd, 0xbd, 0x81, 0x7b, 0x86, 0xec, 0x69, 0xc5, 0x91,
	0xa2, 0xfd, 0x1c, 0x56, 0x8d, 0x40, 0x2b, 0xf2, 0x5e, 0x5e, 0xd9, 0xa7, 0xb7, 0x0c, 0x54, 0xfb,
	0x4f, 0x25, 0x58, 0x35, 0x50, 0xee, 0x3e, 0xc3, 0xa6, 0x3e, 0x0d, 0x2b, 0xfd, 0x69, 0xec, 0xfc,
	0xb1, 0x05, 0xf3, 0x6f, 0x71, 0x3c, 0xd9, 0x81, 0x72, 0x37, 0x0a, 0xc6, 0x64, 0x5d, 0x02, 0x9a,
	0x7f, 0xdb, 0x68, 0x29, 0x6d, 0xe2, 0x5f, 0x16, 0xcf, 0xa0, 0x16, 0xd3, 0x1d, 0x38, 0x5b, 0xf6,
	0xd0, 0xa6, 0xf9, 0xd7, 0x86, 0xc4, 0xd9, 0xd2, 0x86, 0xba, 0xc9, 0x22, 0xe7, 0x8c, 0x7f, 0x24,
	0xb5, 0x99, 0x8c, 0xf3, 0x73, 0x00, 0x4d, 0x23, 0xe7, 0x20, 0xb4, 0xd4, 0x9b, 0x7e, 0x9a, 0x70,
	0x3e, 0x82, 0x95, 0x98, 0x99, 0x53, 0x54, 0x2c, 0x79, 0xa8, 0x9c, 0x9d, 0xe6, 0x74, 0xb5, 0x39,
	0x99, 0x9c, 0xf1, 0x11, 0xc6, 0x49, 0x0e, 0xdc, 0xfe, 0x55, 0x70, 0x99, 0x64, 0xf0, 0x21, 0x34,
	0x12, 0x0c, 0x2a, 0x31, 0x67, 0x9f, 0xa2, 0x71, 0x5b, 0x9f, 0xe4, 0xb4, 0xc6, 0x68, 0x1d, 0x68,
	0x24, 0xa8, 0xd4, 0x9c, 0xe5, 0xfa, 0xc4, 0x30, 0x29, 0x03, 0x65, 0x1f, 0x6a, 0x06, 0x97, 0x99,
	0x58, 0xac, 0x34, 0x17, 0xda, 0xca, 0x69, 0x14, 0x40, 0x2f, 0x31, 0x7a, 0x14, 0x50, 0xb6, 0x31,
	0x0f, 0x53, 0xc6, 0x24, 0x10, 0x9e, 0xc0, 0xa2, 0xa4, 0x2f, 0x67, 0x05, 0xdf, 0x14, 0xcd, 0xf9,
	0x0c, 0x16, 0x25, 0x5b, 0x48, 0x54, 0xd1, 0x27, 0xc5, 0x66, 0xea, 0xe1, 0x53, 0xc4, 0xe2, 0x73,
	0x00, 0x4d, 0x37, 0xce, 0x8a, 0xbb, 0x0c, 0x62, 0xb2, 0x03, 0x8d, 0x04, 0xdb, 0x38, 0x6b, 0x2f,
	0xb2, 0xa9, 0xc9, 0x43, 0x4c, 0x28, 0x49, 0xbe, 0x31, 0x07, 0xe9, 0x53, 0x63, 0x21, 0x73, 0x08,
	0xca, 0x0e, 0x34, 0x12, 0xac, 0xe2, 0x2c, 0x9b, 0xb2, 0x29, 0xc8, 0x0e, 0x34, 0x12, 0xbc, 0xe2,
	0x2c, 0x94, 0x6c, 0x12, 0xb2, 0x0d, 0x75, 0x93, 0x58, 0x9c, 0x95, 0x1b, 0x32, 0x49, 0xc8, 0x9f,
	0x40, 0x05, 0xb9, 0xae, 0x9c, 0xc1, 0xf7, 0xb4, 0x1f, 0x26, 0x21, 0xf6, 0x54, 0x71, 0x46, 0x7e,
	0xde, 0xc8, 0x07, 0x29, 0xd6, 0xc9, 0xa0, 0xc3, 0x5e, 0xa0, 0xdd, 0x9a, 0x74, 0xba, 0x1e, 0x80,
	0x61, 0xf4, 0x1e, 0x2c, 0x25, 0x99, 0x94, 0x1c, 0x88, 0x4d, 0xa9, 0xcd, 0xe1, 0x5d, 0x5e, 0x42,
	0xcd, 0xa0, 0x4c, 0x66, 0x7d, 0x5d, 0x59, 0xec, 0x4a, 0x1b, 0xea, 0x26, 0x65, 0x32, 0x6b, 0x0b,
	0x32, 0xe9, 0x95, 0x0e, 0x34, 0x12, 0x9c, 0xc9, 0xac, 0x60, 0xc8, 0x26, 0x58, 0x8e, 0xf1, 0x15,
	0x95, 0x66, 0x4d, 0x72, 0xb0, 0xbe, 0x6b, 0x06, 0x7a, 0x1e, 0xd1, 0x72, 0x08, 0x8d, 0x04, 0xcf,
	0xa1, 0x13, 0x6b, 0x16, 0x79, 0xa2, 0xed, 0xcb, 0x26, 0x47, 0xf6, 0x60, 0x29, 0xc9, 0x78, 0xcc,
	0xda, 0xb3, 0x1c, 0x7e, 0xe4, 0x0d, 0x90, 0x69, 0xd2, 0x23, 0x07, 0xcb, 0x4e, 0xbb, 0x99, 0x41,
	0x93, 0xfc, 0x12, 0x9a, 0x79, 0x1c, 0x47, 0x0e, 0xea, 0xb6, 0x4a, 0xd8, 0xb3, 0xb8, 0x91, 0x27,
	0xb0, 0x10, 0x53, 0x18, 0x64, 0xc3, 0xc8, 0xf2, 0x06, 0x03, 0xd2, 0xba, 0x3f, 0xa5, 0xd7, 0x91,
	0x65, 0x12, 0x18, 0xb3, 0x22, 0x2b, 0x93, 0xec, 0xd8, 0x83, 0xa5, 0x24, 0x83, 0x31, 0x6b, 0xcd,
	0x73, 0xf8, 0x8e, 0xe7, 0x00, 0x9a, 0x64, 0x98, 0x95, 0xc8, 0x33, 0xe8, 0x88, 0x03, 0xa8, 0x9b,
	0xc5, 0x73, 0x7d, 0x1e, 0x66, 0x70, 0x03, 0xda, 0xa5, 0xcc, 0x7a, 0x3b, 0x42, 0xe9, 0x4a, 0xb5,
	0x09, 0x35, 0x55, 0x59, 0x37, 0xa1, 0x32, 0x8a, 0xdb, 0xca, 0x2a, 0x51, 0xbb, 0x48, 0x5b, 0x95,
	0x28, 0xaa, 0xa4, 0xad, 0x4a, 0x95, 0x3b, 0x0e, 0xa0, 0x6e, 0x16, 0x54, 0x35, 0x54, 0x46, 0x95,
	0x59, 0x43, 0x65, 0xd6, 0x60, 0x77, 0x01, 0x74, 0x81, 0x92, 0x3c, 0xd0, 0x77, 0xca, 0x54, 0xdd,
	0xd4, 0x58, 0xf0, 0xe9, 0x7a, 0xe6, 0x1e, 0xd4, 0x8c, 0x5a, 0x1f, 0x51, 0x5d, 0xa7, 0x8b, 0x90,
	0x3a, 0xbd, 0x65, 0x15, 0x07, 0x1d, 0x58, 0x4e, 0x55, 0xd4, 0xc8, 0xe6, 0x74, 0x7f, 0xb3, 0xac,
	0xd7, 0xfa, 0x4e, 0x6e, 0xbb, 0x76, 0x50, 0x17, 0x8c, 0xb4, 0x83, 0x53, 0x75, 0x2c, 0xed, 0x60,
	0x46, 0x7d, 0xe9, 0x00, 0x8f, 0x10, 0xfd, 0x62, 0x4d, 0x5c, 0x81, 0x52, 0x95, 0xa4, 0xc4, 0x09,
	0x38, 0x5d, 0xbd, 0x39, 0x80, 0xba, 0xf9, 0x88, 0xd7, 0x50, 0x19, 0x65, 0x17, 0x0d, 0x95, 0x59,
	0xea, 0xf8, 0x15, 0x90, 0xe9, 0x7a, 0x00, 0xf9, 0x34, 0x6b, 0x4c, 0xa2, 0xb4, 0xa1, 0x13, 0xd5,
	0x15, 0xe5, 0x84, 0x36, 0x54, 0xd5, 0xf3, 0x8c, 0xa8, 0x4b, 0x57, 0xba, 0x34, 0xa0, 0x8f, 0xcd,
	0xa9, 0xb7, 0xdc, 0x76, 0x89, 0x63, 0xa8, 0xc7, 0x95, 0xc6, 0x48, 0xbf, 0xda, 0x34, 0xc6, 0xd4,
	0x4b, 0xec, 0x87, 0xa5, 0xd3, 0x79, 0xfc, 0xf3, 0xfa, 0x8f, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x6c, 0x46, 0xe1, 0x73, 0xcc, 0x2e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OdriveClient is the client API for Odrive service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OdriveClient interface {
	Stop(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*StopResponse, error)
	GetDiscInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DiscInfoResponse, error)
	CompleteDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*CompleteDiscResponse, error)
	FormatDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*FormatDiscResponse, error)
	SetBurnSpeedConf(ctx context.Context, in *SetSpeedConfRequest, opts ...grpc.CallOption) (*SetSpeedConfResponse, error)
	GetBurnSpeedConf(ctx context.Context, in *GetSpeedConfRequest, opts ...grpc.CallOption) (*GetSpeedConfResponse, error)
	SetBurnConfig(ctx context.Context, in *SetBurnConfigRequest, opts ...grpc.CallOption) (*SetBurnConfigResponse, error)
	GetBurnConfig(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetBurnConfigResponse, error)
	SetBurnMode(ctx context.Context, in *SetBurnModeResquest, opts ...grpc.CallOption) (*SetBurnModeResponse, error)
	GetBurnMode(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetBurnModeResponse, error)
	InitDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*InitDiscResponse, error)
	LoadDisc(ctx context.Context, in *LoadDiscRequest, opts ...grpc.CallOption) (*LoadDiscResponse, error)
	UnLoadDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*UnLoadDiscResponse, error)
	UnLoadUdfDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*UnLoadUdfDiscResponse, error)
	GetDiscMountPoint(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetDiscMountPointResponse, error)
	RecoverDiscDb(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RecoverDiscDbResponse, error)
	FixDiscStatus(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*FixDiscStatusResponse, error)
	//################################################################################
	GetCacheInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetCacheInfoResponse, error)
	Reset(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ResetResponse, error)
	DriveInit(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DriveInitResponse, error)
	GetDriveInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DriveInfoResponse, error)
	TestUnityReady(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*TestUnityReadyResponse, error)
	DriveReboot(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DriveRebootResponse, error)
	DrivePowerOn(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DrivePowerOnResponse, error)
	DrivePowerOff(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DrivePowerOffResponse, error)
	GetDrivePowerStatus(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetDrivePowerStatusResponse, error)
	OpenDriveTray(ctx context.Context, in *OpenDriveTrayRequest, opts ...grpc.CallOption) (*OpenDriveTrayResponse, error)
	CloseDriveTray(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*CloseDriveTrayResponse, error)
	GetDriveTrayStatus(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetDriveTrayStatusResponse, error)
	SimulateDriveTrayChanges(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SimulateDriveTrayChangesResponse, error)
	SetTime(ctx context.Context, in *SetTimeRequest, opts ...grpc.CallOption) (*SetTimeResponse, error)
	SystemReboot(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemRebootResponse, error)
	SystemPoweroff(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemPoweroffResponse, error)
	SystemInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemInfoResponse, error)
	//################################################################################
	RemoveObject(ctx context.Context, in *RemoveObjectRequest, opts ...grpc.CallOption) (*RemoveObjectResponse, error)
	RenameObject(ctx context.Context, in *RenameObjectRequest, opts ...grpc.CallOption) (*RenameObjectResponse, error)
	RemoveBucket(ctx context.Context, in *RemoveBucketRequest, opts ...grpc.CallOption) (*RemoveBucketResponse, error)
	ObjectExists(ctx context.Context, in *ObjectExistsRequest, opts ...grpc.CallOption) (*ObjectExistsResponse, error)
	StatObject(ctx context.Context, in *StatObjectRequest, opts ...grpc.CallOption) (*StatObjectResponse, error)
	ListObjects(ctx context.Context, in *ListObjectsRequest, opts ...grpc.CallOption) (*ListObjectsResponse, error)
	ListObjectBlock(ctx context.Context, in *ListObjectBlockRequest, opts ...grpc.CallOption) (*ListObjectBlockResponse, error)
	MakeBucket(ctx context.Context, in *MakeBucketRequest, opts ...grpc.CallOption) (*MakeBucketResponse, error)
	GetBlockInfo(ctx context.Context, in *GetBlockInfoRequest, opts ...grpc.CallOption) (*GetBlockInfoResponse, error)
	VerifyObject(ctx context.Context, in *VerifyObjectRequest, opts ...grpc.CallOption) (*VerifyObjectResponse, error)
	VerifyObjectStatus(ctx context.Context, in *VerifyObjectStatusRequest, opts ...grpc.CallOption) (*VerifyObjectStatusResponse, error)
	//################################################################################
	PutObject(ctx context.Context, opts ...grpc.CallOption) (Odrive_PutObjectClient, error)
	GetObject(ctx context.Context, in *GetObjectRequest, opts ...grpc.CallOption) (Odrive_GetObjectClient, error)
}

type odriveClient struct {
	cc *grpc.ClientConn
}

func NewOdriveClient(cc *grpc.ClientConn) OdriveClient {
	return &odriveClient{cc}
}

func (c *odriveClient) Stop(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*StopResponse, error) {
	out := new(StopResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetDiscInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DiscInfoResponse, error) {
	out := new(DiscInfoResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetDiscInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) CompleteDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*CompleteDiscResponse, error) {
	out := new(CompleteDiscResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/CompleteDisc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) FormatDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*FormatDiscResponse, error) {
	out := new(FormatDiscResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/FormatDisc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) SetBurnSpeedConf(ctx context.Context, in *SetSpeedConfRequest, opts ...grpc.CallOption) (*SetSpeedConfResponse, error) {
	out := new(SetSpeedConfResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/SetBurnSpeedConf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetBurnSpeedConf(ctx context.Context, in *GetSpeedConfRequest, opts ...grpc.CallOption) (*GetSpeedConfResponse, error) {
	out := new(GetSpeedConfResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetBurnSpeedConf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) SetBurnConfig(ctx context.Context, in *SetBurnConfigRequest, opts ...grpc.CallOption) (*SetBurnConfigResponse, error) {
	out := new(SetBurnConfigResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/SetBurnConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetBurnConfig(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetBurnConfigResponse, error) {
	out := new(GetBurnConfigResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetBurnConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) SetBurnMode(ctx context.Context, in *SetBurnModeResquest, opts ...grpc.CallOption) (*SetBurnModeResponse, error) {
	out := new(SetBurnModeResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/SetBurnMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetBurnMode(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetBurnModeResponse, error) {
	out := new(GetBurnModeResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetBurnMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) InitDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*InitDiscResponse, error) {
	out := new(InitDiscResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/InitDisc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) LoadDisc(ctx context.Context, in *LoadDiscRequest, opts ...grpc.CallOption) (*LoadDiscResponse, error) {
	out := new(LoadDiscResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/LoadDisc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) UnLoadDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*UnLoadDiscResponse, error) {
	out := new(UnLoadDiscResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/UnLoadDisc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) UnLoadUdfDisc(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*UnLoadUdfDiscResponse, error) {
	out := new(UnLoadUdfDiscResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/UnLoadUdfDisc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetDiscMountPoint(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetDiscMountPointResponse, error) {
	out := new(GetDiscMountPointResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetDiscMountPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) RecoverDiscDb(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RecoverDiscDbResponse, error) {
	out := new(RecoverDiscDbResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/RecoverDiscDb", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) FixDiscStatus(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*FixDiscStatusResponse, error) {
	out := new(FixDiscStatusResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/FixDiscStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetCacheInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetCacheInfoResponse, error) {
	out := new(GetCacheInfoResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetCacheInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) Reset(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ResetResponse, error) {
	out := new(ResetResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/Reset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) DriveInit(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DriveInitResponse, error) {
	out := new(DriveInitResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/DriveInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetDriveInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DriveInfoResponse, error) {
	out := new(DriveInfoResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetDriveInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) TestUnityReady(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*TestUnityReadyResponse, error) {
	out := new(TestUnityReadyResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/TestUnityReady", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) DriveReboot(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DriveRebootResponse, error) {
	out := new(DriveRebootResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/DriveReboot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) DrivePowerOn(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DrivePowerOnResponse, error) {
	out := new(DrivePowerOnResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/DrivePowerOn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) DrivePowerOff(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*DrivePowerOffResponse, error) {
	out := new(DrivePowerOffResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/DrivePowerOff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetDrivePowerStatus(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetDrivePowerStatusResponse, error) {
	out := new(GetDrivePowerStatusResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetDrivePowerStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) OpenDriveTray(ctx context.Context, in *OpenDriveTrayRequest, opts ...grpc.CallOption) (*OpenDriveTrayResponse, error) {
	out := new(OpenDriveTrayResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/OpenDriveTray", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) CloseDriveTray(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*CloseDriveTrayResponse, error) {
	out := new(CloseDriveTrayResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/CloseDriveTray", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetDriveTrayStatus(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetDriveTrayStatusResponse, error) {
	out := new(GetDriveTrayStatusResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetDriveTrayStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) SimulateDriveTrayChanges(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SimulateDriveTrayChangesResponse, error) {
	out := new(SimulateDriveTrayChangesResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/SimulateDriveTrayChanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) SetTime(ctx context.Context, in *SetTimeRequest, opts ...grpc.CallOption) (*SetTimeResponse, error) {
	out := new(SetTimeResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/SetTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) SystemReboot(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemRebootResponse, error) {
	out := new(SystemRebootResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/SystemReboot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) SystemPoweroff(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemPoweroffResponse, error) {
	out := new(SystemPoweroffResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/SystemPoweroff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) SystemInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SystemInfoResponse, error) {
	out := new(SystemInfoResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/SystemInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) RemoveObject(ctx context.Context, in *RemoveObjectRequest, opts ...grpc.CallOption) (*RemoveObjectResponse, error) {
	out := new(RemoveObjectResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/RemoveObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) RenameObject(ctx context.Context, in *RenameObjectRequest, opts ...grpc.CallOption) (*RenameObjectResponse, error) {
	out := new(RenameObjectResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/RenameObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) RemoveBucket(ctx context.Context, in *RemoveBucketRequest, opts ...grpc.CallOption) (*RemoveBucketResponse, error) {
	out := new(RemoveBucketResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/RemoveBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) ObjectExists(ctx context.Context, in *ObjectExistsRequest, opts ...grpc.CallOption) (*ObjectExistsResponse, error) {
	out := new(ObjectExistsResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/ObjectExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) StatObject(ctx context.Context, in *StatObjectRequest, opts ...grpc.CallOption) (*StatObjectResponse, error) {
	out := new(StatObjectResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/StatObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) ListObjects(ctx context.Context, in *ListObjectsRequest, opts ...grpc.CallOption) (*ListObjectsResponse, error) {
	out := new(ListObjectsResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/ListObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) ListObjectBlock(ctx context.Context, in *ListObjectBlockRequest, opts ...grpc.CallOption) (*ListObjectBlockResponse, error) {
	out := new(ListObjectBlockResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/ListObjectBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) MakeBucket(ctx context.Context, in *MakeBucketRequest, opts ...grpc.CallOption) (*MakeBucketResponse, error) {
	out := new(MakeBucketResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/MakeBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) GetBlockInfo(ctx context.Context, in *GetBlockInfoRequest, opts ...grpc.CallOption) (*GetBlockInfoResponse, error) {
	out := new(GetBlockInfoResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/GetBlockInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) VerifyObject(ctx context.Context, in *VerifyObjectRequest, opts ...grpc.CallOption) (*VerifyObjectResponse, error) {
	out := new(VerifyObjectResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/VerifyObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) VerifyObjectStatus(ctx context.Context, in *VerifyObjectStatusRequest, opts ...grpc.CallOption) (*VerifyObjectStatusResponse, error) {
	out := new(VerifyObjectStatusResponse)
	err := c.cc.Invoke(ctx, "/odrive.Odrive/VerifyObjectStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *odriveClient) PutObject(ctx context.Context, opts ...grpc.CallOption) (Odrive_PutObjectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Odrive_serviceDesc.Streams[0], "/odrive.Odrive/PutObject", opts...)
	if err != nil {
		return nil, err
	}
	x := &odrivePutObjectClient{stream}
	return x, nil
}

type Odrive_PutObjectClient interface {
	Send(*PutObjectRequest) error
	CloseAndRecv() (*PutObjectResponse, error)
	grpc.ClientStream
}

type odrivePutObjectClient struct {
	grpc.ClientStream
}

func (x *odrivePutObjectClient) Send(m *PutObjectRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *odrivePutObjectClient) CloseAndRecv() (*PutObjectResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PutObjectResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *odriveClient) GetObject(ctx context.Context, in *GetObjectRequest, opts ...grpc.CallOption) (Odrive_GetObjectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Odrive_serviceDesc.Streams[1], "/odrive.Odrive/GetObject", opts...)
	if err != nil {
		return nil, err
	}
	x := &odriveGetObjectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Odrive_GetObjectClient interface {
	Recv() (*GetObjectResponse, error)
	grpc.ClientStream
}

type odriveGetObjectClient struct {
	grpc.ClientStream
}

func (x *odriveGetObjectClient) Recv() (*GetObjectResponse, error) {
	m := new(GetObjectResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OdriveServer is the server API for Odrive service.
type OdriveServer interface {
	Stop(context.Context, *EmptyRequest) (*StopResponse, error)
	GetDiscInfo(context.Context, *EmptyRequest) (*DiscInfoResponse, error)
	CompleteDisc(context.Context, *EmptyRequest) (*CompleteDiscResponse, error)
	FormatDisc(context.Context, *EmptyRequest) (*FormatDiscResponse, error)
	SetBurnSpeedConf(context.Context, *SetSpeedConfRequest) (*SetSpeedConfResponse, error)
	GetBurnSpeedConf(context.Context, *GetSpeedConfRequest) (*GetSpeedConfResponse, error)
	SetBurnConfig(context.Context, *SetBurnConfigRequest) (*SetBurnConfigResponse, error)
	GetBurnConfig(context.Context, *EmptyRequest) (*GetBurnConfigResponse, error)
	SetBurnMode(context.Context, *SetBurnModeResquest) (*SetBurnModeResponse, error)
	GetBurnMode(context.Context, *EmptyRequest) (*GetBurnModeResponse, error)
	InitDisc(context.Context, *EmptyRequest) (*InitDiscResponse, error)
	LoadDisc(context.Context, *LoadDiscRequest) (*LoadDiscResponse, error)
	UnLoadDisc(context.Context, *EmptyRequest) (*UnLoadDiscResponse, error)
	UnLoadUdfDisc(context.Context, *EmptyRequest) (*UnLoadUdfDiscResponse, error)
	GetDiscMountPoint(context.Context, *EmptyRequest) (*GetDiscMountPointResponse, error)
	RecoverDiscDb(context.Context, *EmptyRequest) (*RecoverDiscDbResponse, error)
	FixDiscStatus(context.Context, *EmptyRequest) (*FixDiscStatusResponse, error)
	//################################################################################
	GetCacheInfo(context.Context, *EmptyRequest) (*GetCacheInfoResponse, error)
	Reset(context.Context, *EmptyRequest) (*ResetResponse, error)
	DriveInit(context.Context, *EmptyRequest) (*DriveInitResponse, error)
	GetDriveInfo(context.Context, *EmptyRequest) (*DriveInfoResponse, error)
	TestUnityReady(context.Context, *EmptyRequest) (*TestUnityReadyResponse, error)
	DriveReboot(context.Context, *EmptyRequest) (*DriveRebootResponse, error)
	DrivePowerOn(context.Context, *EmptyRequest) (*DrivePowerOnResponse, error)
	DrivePowerOff(context.Context, *EmptyRequest) (*DrivePowerOffResponse, error)
	GetDrivePowerStatus(context.Context, *EmptyRequest) (*GetDrivePowerStatusResponse, error)
	OpenDriveTray(context.Context, *OpenDriveTrayRequest) (*OpenDriveTrayResponse, error)
	CloseDriveTray(context.Context, *EmptyRequest) (*CloseDriveTrayResponse, error)
	GetDriveTrayStatus(context.Context, *EmptyRequest) (*GetDriveTrayStatusResponse, error)
	SimulateDriveTrayChanges(context.Context, *EmptyRequest) (*SimulateDriveTrayChangesResponse, error)
	SetTime(context.Context, *SetTimeRequest) (*SetTimeResponse, error)
	SystemReboot(context.Context, *EmptyRequest) (*SystemRebootResponse, error)
	SystemPoweroff(context.Context, *EmptyRequest) (*SystemPoweroffResponse, error)
	SystemInfo(context.Context, *EmptyRequest) (*SystemInfoResponse, error)
	//################################################################################
	RemoveObject(context.Context, *RemoveObjectRequest) (*RemoveObjectResponse, error)
	RenameObject(context.Context, *RenameObjectRequest) (*RenameObjectResponse, error)
	RemoveBucket(context.Context, *RemoveBucketRequest) (*RemoveBucketResponse, error)
	ObjectExists(context.Context, *ObjectExistsRequest) (*ObjectExistsResponse, error)
	StatObject(context.Context, *StatObjectRequest) (*StatObjectResponse, error)
	ListObjects(context.Context, *ListObjectsRequest) (*ListObjectsResponse, error)
	ListObjectBlock(context.Context, *ListObjectBlockRequest) (*ListObjectBlockResponse, error)
	MakeBucket(context.Context, *MakeBucketRequest) (*MakeBucketResponse, error)
	GetBlockInfo(context.Context, *GetBlockInfoRequest) (*GetBlockInfoResponse, error)
	VerifyObject(context.Context, *VerifyObjectRequest) (*VerifyObjectResponse, error)
	VerifyObjectStatus(context.Context, *VerifyObjectStatusRequest) (*VerifyObjectStatusResponse, error)
	//################################################################################
	PutObject(Odrive_PutObjectServer) error
	GetObject(*GetObjectRequest, Odrive_GetObjectServer) error
}

// UnimplementedOdriveServer can be embedded to have forward compatible implementations.
type UnimplementedOdriveServer struct {
}

func (*UnimplementedOdriveServer) Stop(ctx context.Context, req *EmptyRequest) (*StopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedOdriveServer) GetDiscInfo(ctx context.Context, req *EmptyRequest) (*DiscInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscInfo not implemented")
}
func (*UnimplementedOdriveServer) CompleteDisc(ctx context.Context, req *EmptyRequest) (*CompleteDiscResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteDisc not implemented")
}
func (*UnimplementedOdriveServer) FormatDisc(ctx context.Context, req *EmptyRequest) (*FormatDiscResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormatDisc not implemented")
}
func (*UnimplementedOdriveServer) SetBurnSpeedConf(ctx context.Context, req *SetSpeedConfRequest) (*SetSpeedConfResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBurnSpeedConf not implemented")
}
func (*UnimplementedOdriveServer) GetBurnSpeedConf(ctx context.Context, req *GetSpeedConfRequest) (*GetSpeedConfResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBurnSpeedConf not implemented")
}
func (*UnimplementedOdriveServer) SetBurnConfig(ctx context.Context, req *SetBurnConfigRequest) (*SetBurnConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBurnConfig not implemented")
}
func (*UnimplementedOdriveServer) GetBurnConfig(ctx context.Context, req *EmptyRequest) (*GetBurnConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBurnConfig not implemented")
}
func (*UnimplementedOdriveServer) SetBurnMode(ctx context.Context, req *SetBurnModeResquest) (*SetBurnModeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBurnMode not implemented")
}
func (*UnimplementedOdriveServer) GetBurnMode(ctx context.Context, req *EmptyRequest) (*GetBurnModeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBurnMode not implemented")
}
func (*UnimplementedOdriveServer) InitDisc(ctx context.Context, req *EmptyRequest) (*InitDiscResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitDisc not implemented")
}
func (*UnimplementedOdriveServer) LoadDisc(ctx context.Context, req *LoadDiscRequest) (*LoadDiscResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadDisc not implemented")
}
func (*UnimplementedOdriveServer) UnLoadDisc(ctx context.Context, req *EmptyRequest) (*UnLoadDiscResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnLoadDisc not implemented")
}
func (*UnimplementedOdriveServer) UnLoadUdfDisc(ctx context.Context, req *EmptyRequest) (*UnLoadUdfDiscResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnLoadUdfDisc not implemented")
}
func (*UnimplementedOdriveServer) GetDiscMountPoint(ctx context.Context, req *EmptyRequest) (*GetDiscMountPointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscMountPoint not implemented")
}
func (*UnimplementedOdriveServer) RecoverDiscDb(ctx context.Context, req *EmptyRequest) (*RecoverDiscDbResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverDiscDb not implemented")
}
func (*UnimplementedOdriveServer) FixDiscStatus(ctx context.Context, req *EmptyRequest) (*FixDiscStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FixDiscStatus not implemented")
}
func (*UnimplementedOdriveServer) GetCacheInfo(ctx context.Context, req *EmptyRequest) (*GetCacheInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCacheInfo not implemented")
}
func (*UnimplementedOdriveServer) Reset(ctx context.Context, req *EmptyRequest) (*ResetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reset not implemented")
}
func (*UnimplementedOdriveServer) DriveInit(ctx context.Context, req *EmptyRequest) (*DriveInitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DriveInit not implemented")
}
func (*UnimplementedOdriveServer) GetDriveInfo(ctx context.Context, req *EmptyRequest) (*DriveInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDriveInfo not implemented")
}
func (*UnimplementedOdriveServer) TestUnityReady(ctx context.Context, req *EmptyRequest) (*TestUnityReadyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestUnityReady not implemented")
}
func (*UnimplementedOdriveServer) DriveReboot(ctx context.Context, req *EmptyRequest) (*DriveRebootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DriveReboot not implemented")
}
func (*UnimplementedOdriveServer) DrivePowerOn(ctx context.Context, req *EmptyRequest) (*DrivePowerOnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DrivePowerOn not implemented")
}
func (*UnimplementedOdriveServer) DrivePowerOff(ctx context.Context, req *EmptyRequest) (*DrivePowerOffResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DrivePowerOff not implemented")
}
func (*UnimplementedOdriveServer) GetDrivePowerStatus(ctx context.Context, req *EmptyRequest) (*GetDrivePowerStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDrivePowerStatus not implemented")
}
func (*UnimplementedOdriveServer) OpenDriveTray(ctx context.Context, req *OpenDriveTrayRequest) (*OpenDriveTrayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenDriveTray not implemented")
}
func (*UnimplementedOdriveServer) CloseDriveTray(ctx context.Context, req *EmptyRequest) (*CloseDriveTrayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseDriveTray not implemented")
}
func (*UnimplementedOdriveServer) GetDriveTrayStatus(ctx context.Context, req *EmptyRequest) (*GetDriveTrayStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDriveTrayStatus not implemented")
}
func (*UnimplementedOdriveServer) SimulateDriveTrayChanges(ctx context.Context, req *EmptyRequest) (*SimulateDriveTrayChangesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SimulateDriveTrayChanges not implemented")
}
func (*UnimplementedOdriveServer) SetTime(ctx context.Context, req *SetTimeRequest) (*SetTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTime not implemented")
}
func (*UnimplementedOdriveServer) SystemReboot(ctx context.Context, req *EmptyRequest) (*SystemRebootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemReboot not implemented")
}
func (*UnimplementedOdriveServer) SystemPoweroff(ctx context.Context, req *EmptyRequest) (*SystemPoweroffResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemPoweroff not implemented")
}
func (*UnimplementedOdriveServer) SystemInfo(ctx context.Context, req *EmptyRequest) (*SystemInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemInfo not implemented")
}
func (*UnimplementedOdriveServer) RemoveObject(ctx context.Context, req *RemoveObjectRequest) (*RemoveObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveObject not implemented")
}
func (*UnimplementedOdriveServer) RenameObject(ctx context.Context, req *RenameObjectRequest) (*RenameObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenameObject not implemented")
}
func (*UnimplementedOdriveServer) RemoveBucket(ctx context.Context, req *RemoveBucketRequest) (*RemoveBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveBucket not implemented")
}
func (*UnimplementedOdriveServer) ObjectExists(ctx context.Context, req *ObjectExistsRequest) (*ObjectExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ObjectExists not implemented")
}
func (*UnimplementedOdriveServer) StatObject(ctx context.Context, req *StatObjectRequest) (*StatObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StatObject not implemented")
}
func (*UnimplementedOdriveServer) ListObjects(ctx context.Context, req *ListObjectsRequest) (*ListObjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListObjects not implemented")
}
func (*UnimplementedOdriveServer) ListObjectBlock(ctx context.Context, req *ListObjectBlockRequest) (*ListObjectBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListObjectBlock not implemented")
}
func (*UnimplementedOdriveServer) MakeBucket(ctx context.Context, req *MakeBucketRequest) (*MakeBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeBucket not implemented")
}
func (*UnimplementedOdriveServer) GetBlockInfo(ctx context.Context, req *GetBlockInfoRequest) (*GetBlockInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockInfo not implemented")
}
func (*UnimplementedOdriveServer) VerifyObject(ctx context.Context, req *VerifyObjectRequest) (*VerifyObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyObject not implemented")
}
func (*UnimplementedOdriveServer) VerifyObjectStatus(ctx context.Context, req *VerifyObjectStatusRequest) (*VerifyObjectStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyObjectStatus not implemented")
}
func (*UnimplementedOdriveServer) PutObject(srv Odrive_PutObjectServer) error {
	return status.Errorf(codes.Unimplemented, "method PutObject not implemented")
}
func (*UnimplementedOdriveServer) GetObject(req *GetObjectRequest, srv Odrive_GetObjectServer) error {
	return status.Errorf(codes.Unimplemented, "method GetObject not implemented")
}

func RegisterOdriveServer(s *grpc.Server, srv OdriveServer) {
	s.RegisterService(&_Odrive_serviceDesc, srv)
}

func _Odrive_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).Stop(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetDiscInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetDiscInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetDiscInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetDiscInfo(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_CompleteDisc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).CompleteDisc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/CompleteDisc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).CompleteDisc(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_FormatDisc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).FormatDisc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/FormatDisc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).FormatDisc(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_SetBurnSpeedConf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSpeedConfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).SetBurnSpeedConf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/SetBurnSpeedConf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).SetBurnSpeedConf(ctx, req.(*SetSpeedConfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetBurnSpeedConf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpeedConfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetBurnSpeedConf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetBurnSpeedConf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetBurnSpeedConf(ctx, req.(*GetSpeedConfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_SetBurnConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBurnConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).SetBurnConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/SetBurnConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).SetBurnConfig(ctx, req.(*SetBurnConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetBurnConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetBurnConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetBurnConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetBurnConfig(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_SetBurnMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBurnModeResquest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).SetBurnMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/SetBurnMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).SetBurnMode(ctx, req.(*SetBurnModeResquest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetBurnMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetBurnMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetBurnMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetBurnMode(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_InitDisc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).InitDisc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/InitDisc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).InitDisc(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_LoadDisc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadDiscRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).LoadDisc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/LoadDisc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).LoadDisc(ctx, req.(*LoadDiscRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_UnLoadDisc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).UnLoadDisc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/UnLoadDisc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).UnLoadDisc(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_UnLoadUdfDisc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).UnLoadUdfDisc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/UnLoadUdfDisc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).UnLoadUdfDisc(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetDiscMountPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetDiscMountPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetDiscMountPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetDiscMountPoint(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_RecoverDiscDb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).RecoverDiscDb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/RecoverDiscDb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).RecoverDiscDb(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_FixDiscStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).FixDiscStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/FixDiscStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).FixDiscStatus(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetCacheInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetCacheInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetCacheInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetCacheInfo(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).Reset(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_DriveInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).DriveInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/DriveInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).DriveInit(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetDriveInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetDriveInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetDriveInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetDriveInfo(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_TestUnityReady_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).TestUnityReady(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/TestUnityReady",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).TestUnityReady(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_DriveReboot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).DriveReboot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/DriveReboot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).DriveReboot(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_DrivePowerOn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).DrivePowerOn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/DrivePowerOn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).DrivePowerOn(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_DrivePowerOff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).DrivePowerOff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/DrivePowerOff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).DrivePowerOff(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetDrivePowerStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetDrivePowerStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetDrivePowerStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetDrivePowerStatus(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_OpenDriveTray_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenDriveTrayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).OpenDriveTray(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/OpenDriveTray",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).OpenDriveTray(ctx, req.(*OpenDriveTrayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_CloseDriveTray_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).CloseDriveTray(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/CloseDriveTray",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).CloseDriveTray(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetDriveTrayStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetDriveTrayStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetDriveTrayStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetDriveTrayStatus(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_SimulateDriveTrayChanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).SimulateDriveTrayChanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/SimulateDriveTrayChanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).SimulateDriveTrayChanges(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_SetTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).SetTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/SetTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).SetTime(ctx, req.(*SetTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_SystemReboot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).SystemReboot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/SystemReboot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).SystemReboot(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_SystemPoweroff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).SystemPoweroff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/SystemPoweroff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).SystemPoweroff(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_SystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).SystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/SystemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).SystemInfo(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_RemoveObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).RemoveObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/RemoveObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).RemoveObject(ctx, req.(*RemoveObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_RenameObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).RenameObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/RenameObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).RenameObject(ctx, req.(*RenameObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_RemoveBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).RemoveBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/RemoveBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).RemoveBucket(ctx, req.(*RemoveBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_ObjectExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).ObjectExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/ObjectExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).ObjectExists(ctx, req.(*ObjectExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_StatObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).StatObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/StatObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).StatObject(ctx, req.(*StatObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_ListObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListObjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).ListObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/ListObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).ListObjects(ctx, req.(*ListObjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_ListObjectBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListObjectBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).ListObjectBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/ListObjectBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).ListObjectBlock(ctx, req.(*ListObjectBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_MakeBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).MakeBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/MakeBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).MakeBucket(ctx, req.(*MakeBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_GetBlockInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).GetBlockInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/GetBlockInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).GetBlockInfo(ctx, req.(*GetBlockInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_VerifyObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).VerifyObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/VerifyObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).VerifyObject(ctx, req.(*VerifyObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_VerifyObjectStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyObjectStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OdriveServer).VerifyObjectStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odrive.Odrive/VerifyObjectStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OdriveServer).VerifyObjectStatus(ctx, req.(*VerifyObjectStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Odrive_PutObject_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OdriveServer).PutObject(&odrivePutObjectServer{stream})
}

type Odrive_PutObjectServer interface {
	SendAndClose(*PutObjectResponse) error
	Recv() (*PutObjectRequest, error)
	grpc.ServerStream
}

type odrivePutObjectServer struct {
	grpc.ServerStream
}

func (x *odrivePutObjectServer) SendAndClose(m *PutObjectResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *odrivePutObjectServer) Recv() (*PutObjectRequest, error) {
	m := new(PutObjectRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Odrive_GetObject_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetObjectRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OdriveServer).GetObject(m, &odriveGetObjectServer{stream})
}

type Odrive_GetObjectServer interface {
	Send(*GetObjectResponse) error
	grpc.ServerStream
}

type odriveGetObjectServer struct {
	grpc.ServerStream
}

func (x *odriveGetObjectServer) Send(m *GetObjectResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Odrive_serviceDesc = grpc.ServiceDesc{
	ServiceName: "odrive.Odrive",
	HandlerType: (*OdriveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Stop",
			Handler:    _Odrive_Stop_Handler,
		},
		{
			MethodName: "GetDiscInfo",
			Handler:    _Odrive_GetDiscInfo_Handler,
		},
		{
			MethodName: "CompleteDisc",
			Handler:    _Odrive_CompleteDisc_Handler,
		},
		{
			MethodName: "FormatDisc",
			Handler:    _Odrive_FormatDisc_Handler,
		},
		{
			MethodName: "SetBurnSpeedConf",
			Handler:    _Odrive_SetBurnSpeedConf_Handler,
		},
		{
			MethodName: "GetBurnSpeedConf",
			Handler:    _Odrive_GetBurnSpeedConf_Handler,
		},
		{
			MethodName: "SetBurnConfig",
			Handler:    _Odrive_SetBurnConfig_Handler,
		},
		{
			MethodName: "GetBurnConfig",
			Handler:    _Odrive_GetBurnConfig_Handler,
		},
		{
			MethodName: "SetBurnMode",
			Handler:    _Odrive_SetBurnMode_Handler,
		},
		{
			MethodName: "GetBurnMode",
			Handler:    _Odrive_GetBurnMode_Handler,
		},
		{
			MethodName: "InitDisc",
			Handler:    _Odrive_InitDisc_Handler,
		},
		{
			MethodName: "LoadDisc",
			Handler:    _Odrive_LoadDisc_Handler,
		},
		{
			MethodName: "UnLoadDisc",
			Handler:    _Odrive_UnLoadDisc_Handler,
		},
		{
			MethodName: "UnLoadUdfDisc",
			Handler:    _Odrive_UnLoadUdfDisc_Handler,
		},
		{
			MethodName: "GetDiscMountPoint",
			Handler:    _Odrive_GetDiscMountPoint_Handler,
		},
		{
			MethodName: "RecoverDiscDb",
			Handler:    _Odrive_RecoverDiscDb_Handler,
		},
		{
			MethodName: "FixDiscStatus",
			Handler:    _Odrive_FixDiscStatus_Handler,
		},
		{
			MethodName: "GetCacheInfo",
			Handler:    _Odrive_GetCacheInfo_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _Odrive_Reset_Handler,
		},
		{
			MethodName: "DriveInit",
			Handler:    _Odrive_DriveInit_Handler,
		},
		{
			MethodName: "GetDriveInfo",
			Handler:    _Odrive_GetDriveInfo_Handler,
		},
		{
			MethodName: "TestUnityReady",
			Handler:    _Odrive_TestUnityReady_Handler,
		},
		{
			MethodName: "DriveReboot",
			Handler:    _Odrive_DriveReboot_Handler,
		},
		{
			MethodName: "DrivePowerOn",
			Handler:    _Odrive_DrivePowerOn_Handler,
		},
		{
			MethodName: "DrivePowerOff",
			Handler:    _Odrive_DrivePowerOff_Handler,
		},
		{
			MethodName: "GetDrivePowerStatus",
			Handler:    _Odrive_GetDrivePowerStatus_Handler,
		},
		{
			MethodName: "OpenDriveTray",
			Handler:    _Odrive_OpenDriveTray_Handler,
		},
		{
			MethodName: "CloseDriveTray",
			Handler:    _Odrive_CloseDriveTray_Handler,
		},
		{
			MethodName: "GetDriveTrayStatus",
			Handler:    _Odrive_GetDriveTrayStatus_Handler,
		},
		{
			MethodName: "SimulateDriveTrayChanges",
			Handler:    _Odrive_SimulateDriveTrayChanges_Handler,
		},
		{
			MethodName: "SetTime",
			Handler:    _Odrive_SetTime_Handler,
		},
		{
			MethodName: "SystemReboot",
			Handler:    _Odrive_SystemReboot_Handler,
		},
		{
			MethodName: "SystemPoweroff",
			Handler:    _Odrive_SystemPoweroff_Handler,
		},
		{
			MethodName: "SystemInfo",
			Handler:    _Odrive_SystemInfo_Handler,
		},
		{
			MethodName: "RemoveObject",
			Handler:    _Odrive_RemoveObject_Handler,
		},
		{
			MethodName: "RenameObject",
			Handler:    _Odrive_RenameObject_Handler,
		},
		{
			MethodName: "RemoveBucket",
			Handler:    _Odrive_RemoveBucket_Handler,
		},
		{
			MethodName: "ObjectExists",
			Handler:    _Odrive_ObjectExists_Handler,
		},
		{
			MethodName: "StatObject",
			Handler:    _Odrive_StatObject_Handler,
		},
		{
			MethodName: "ListObjects",
			Handler:    _Odrive_ListObjects_Handler,
		},
		{
			MethodName: "ListObjectBlock",
			Handler:    _Odrive_ListObjectBlock_Handler,
		},
		{
			MethodName: "MakeBucket",
			Handler:    _Odrive_MakeBucket_Handler,
		},
		{
			MethodName: "GetBlockInfo",
			Handler:    _Odrive_GetBlockInfo_Handler,
		},
		{
			MethodName: "VerifyObject",
			Handler:    _Odrive_VerifyObject_Handler,
		},
		{
			MethodName: "VerifyObjectStatus",
			Handler:    _Odrive_VerifyObjectStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PutObject",
			Handler:       _Odrive_PutObject_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetObject",
			Handler:       _Odrive_GetObject_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "odrive.proto",
}
